### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Style:class'
    summary: 'Ein Objekt, das das Format einer Formatvorlage und andere Eigenschaften kapselt.'
    name: Excel.Style
    fullName: Excel.Style
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.Style#autoIndent:member'
      - 'excel!Excel.Style#borders:member'
      - 'excel!Excel.Style#builtIn:member'
      - 'excel!Excel.Style#context:member'
      - 'excel!Excel.Style#delete:member(1)'
      - 'excel!Excel.Style#fill:member'
      - 'excel!Excel.Style#font:member'
      - 'excel!Excel.Style#formulaHidden:member'
      - 'excel!Excel.Style#horizontalAlignment:member'
      - 'excel!Excel.Style#includeAlignment:member'
      - 'excel!Excel.Style#includeBorder:member'
      - 'excel!Excel.Style#includeFont:member'
      - 'excel!Excel.Style#includeNumber:member'
      - 'excel!Excel.Style#includePatterns:member'
      - 'excel!Excel.Style#includeProtection:member'
      - 'excel!Excel.Style#indentLevel:member'
      - 'excel!Excel.Style#load:member(1)'
      - 'excel!Excel.Style#load:member(2)'
      - 'excel!Excel.Style#locked:member'
      - 'excel!Excel.Style#name:member'
      - 'excel!Excel.Style#numberFormat:member'
      - 'excel!Excel.Style#numberFormatLocal:member'
      - 'excel!Excel.Style#readingOrder:member'
      - 'excel!Excel.Style#set:member(1)'
      - 'excel!Excel.Style#shrinkToFit:member'
      - 'excel!Excel.Style#textOrientation:member'
      - 'excel!Excel.Style#verticalAlignment:member'
      - 'excel!Excel.Style#wrapText:member'
  - uid: 'excel!Excel.Style#autoIndent:member'
    summary: 'Gibt an, ob der Text automatisch eingezogen wird, wenn die Textausrichtung in einer Zelle auf eine gleichmäßige Verteilung festgelegt ist.'
    name: autoIndent
    fullName: autoIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoIndent: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#borders:member'
    summary: 'Eine Auflistung von vier Rahmenobjekten, die die vier Rahmenlinien eines Bereichs- oder Style-Objekts darstellen.'
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
  - uid: 'excel!Excel.Style#builtIn:member'
    summary: 'Gibt an, ob die Formatvorlage integriert ist.'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly builtIn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Style#delete:member(1)'
    summary: Löscht diese Formatvorlage.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");

              // Delete the diagonal orientation style from the style collection.
              // Styles are in the Home tab ribbon.
              style.delete();

              await context.sync();

              console.log("Successfully deleted the diagonal orientation style from the Home tab ribbon.");
          }
          ```
  - uid: 'excel!Excel.Style#fill:member'
    summary: Der Inhalt der Formatvorlage.
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type:
          - 'excel!Excel.RangeFill:class'
  - uid: 'excel!Excel.Style#font:member'
    summary: 'Gibt ein Schriftartobjekt zurück, das die Schriftart der Formatvorlage darstellt.'
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type:
          - 'excel!Excel.RangeFont:class'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let style = context.workbook.styles.getItem("Normal");
              style.font.load("bold, color, italic, name, size");
              style.fill.load("color");

              await context.sync();

              console.log("Bold: " + style.font.bold);
              console.log("Font color: " + style.font.color);
              console.log("Italic: " + style.font.italic);
              console.log("Name: " + style.font.name);
              console.log("Size: " + style.font.size);
              console.log("Fill color: " + style.fill.color);
          }
          ```
  - uid: 'excel!Excel.Style#formulaHidden:member'
    summary: 'Gibt an, ob die Formel ausgeblendet ist, wenn das Arbeitsblatt geschützt ist.'
    name: formulaHidden
    fullName: formulaHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaHidden: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#horizontalAlignment:member'
    summary: Stellt die horizontale Ausrichtung für den Stil dar. Details finden Sie unter Excel. HorizontalAlignment.
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
      return:
        type:
          - 'excel!Excel.Style#horizontalAlignment~0:complex'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let worksheet = context.workbook.worksheets.getItem("Sample");
              let range = worksheet.getRange("A1:E1");

              // Apply built-in style. 
              // Styles are in the Home tab ribbon.
              range.style = Excel.BuiltInStyle.neutral;
              range.format.horizontalAlignment = "Right";

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Style#includeAlignment:member'
    summary: 'Zeigt an, ob die Formatvorlage die Eigenschaften AutoIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel und TextOrientation enthält.'
    name: includeAlignment
    fullName: includeAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeAlignment: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeBorder:member'
    summary: 'Gibt an, ob die Formatvorlage die Eigenschaften Color, ColorIndex, LineStyle und Weight Rahmen enthält.'
    name: includeBorder
    fullName: includeBorder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeBorder: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeFont:member'
    summary: 'Zeigt an, ob die Formatvorlage die Eigenschaften Hintergrund, Fett, Farbe, ColorIndex, FontStyle, Kursiv, Name, Größe, Durchgestrichen, Tiefgestellt, Hochgestellt und Unterstrichen enthält.'
    name: includeFont
    fullName: includeFont
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeFont: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeNumber:member'
    summary: 'Gibt an, ob die Formatvorlage die NumberFormat-Eigenschaft enthält.'
    name: includeNumber
    fullName: includeNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeNumber: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includePatterns:member'
    summary: 'Gibt an, ob die Formatvorlage die Eigenschaften Farbe, ColorIndex, InvertIfNegative, Muster, PatternColor und PatternColorIndex enthält.'
    name: includePatterns
    fullName: includePatterns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includePatterns: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#includeProtection:member'
    summary: 'Gibt an, ob die Formatvorlage die Eigenschaften FormulaHidden und Sperrschutz enthält.'
    name: includeProtection
    fullName: includeProtection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeProtection: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#indentLevel:member'
    summary: 'Eine ganze Zahl zwischen 0 und 250, die die Einzugsebene für die Formatvorlage angibt.'
    name: indentLevel
    fullName: indentLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentLevel: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Style#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");            
              style.load("textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked");

              await context.sync();

              console.log("Orientation: " + style.textOrientation);
              console.log("Horizontal alignment: " + style.horizontalAlignment);
              console.log("Add indent: " + style.autoIndent);
              console.log("Reading order: " + style.readingOrder);
              console.log("Wrap text: " + style.wrapText);
              console.log("Include protection: " + style.includeProtection);
              console.log("Shrink to fit: " + style.shrinkToFit);
              console.log("Style locked: " + style.locked);
          }
          ```
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Style#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Style;
      return:
        type:
          - 'excel!Excel.Style:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Style#locked:member'
    summary: 'Gibt an, ob das Objekt gesperrt ist, wenn das Arbeitsblatt geschützt ist.'
    name: locked
    fullName: locked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'locked: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#name:member'
    summary: Der Name der Formatvorlage.
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Style#numberFormat:member'
    summary: Der Formatcode des Zahlenformats für die Formatvorlage.
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Style#numberFormatLocal:member'
    summary: Der lokalisierte Formatcode des Zahlenformats für die Formatvorlage.
    name: numberFormatLocal
    fullName: numberFormatLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormatLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Style#readingOrder:member'
    summary: Die Leserichtung für die Formatvorlage.
    name: readingOrder
    fullName: readingOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - 'excel!Excel.Style#readingOrder~0:complex'
  - uid: 'excel!Excel.Style#set:member(1)'
    summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Style): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Style:class'
  - uid: 'excel!Excel.Style#shrinkToFit:member'
    summary: 'Zeigt an, dass Text automatisch verkleinert wird, um in die verfügbare Spaltenbreite zu passen.'
    name: shrinkToFit
    fullName: shrinkToFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shrinkToFit: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Style#textOrientation:member'
    summary: Die Textausrichtung für die Formatvorlage.
    name: textOrientation
    fullName: textOrientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOrientation: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Style#verticalAlignment:member'
    summary: Stellt die vertikale Ausrichtung für die Formatvorlage dar. Weitere Informationen finden Sie unter Excel. VerticalAlignment.
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - 'excel!Excel.Style#verticalAlignment~0:complex'
  - uid: 'excel!Excel.Style#wrapText:member'
    summary: 'Gibt an, ob Microsoft Excel den Text im Objekt umbricht.'
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!Excel.RangeBorderCollection:class'
    name: RangeBorderCollection
    fullName: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.RangeFill:class'
    name: RangeFill
    fullName: Excel.RangeFill
  - uid: 'excel!Excel.RangeFont:class'
    name: RangeFont
    fullName: Excel.RangeFont
  - uid: 'excel!Excel.Style#horizontalAlignment~0:complex'
    name: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
    fullName: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
    spec.typeScript:
      - uid: 'excel!Excel.HorizontalAlignment:enum'
        name: Excel.HorizontalAlignment
        fullName: Excel.HorizontalAlignment
      - name: ' | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"'
        fullName: ' | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"'
  - uid: 'excel!Excel.Style:class'
    name: Style
    fullName: Excel.Style
  - uid: 'excel!Excel.Style#readingOrder~0:complex'
    name: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
    fullName: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
    spec.typeScript:
      - uid: 'excel!Excel.ReadingOrder:enum'
        name: Excel.ReadingOrder
        fullName: Excel.ReadingOrder
      - name: ' | "Context" | "LeftToRight" | "RightToLeft"'
        fullName: ' | "Context" | "LeftToRight" | "RightToLeft"'
  - uid: 'excel!Excel.Style#verticalAlignment~0:complex'
    name: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
    fullName: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
    spec.typeScript:
      - uid: 'excel!Excel.VerticalAlignment:enum'
        name: Excel.VerticalAlignment
        fullName: Excel.VerticalAlignment
      - name: ' | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"'
        fullName: ' | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"'