### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItemCollection:class'
    summary: 'Eine Auflistung aller NamedItem-Objekte, die Teil der Arbeitsmappe oder des Arbeitsblatts sind, je nachdem, wie Sie erreicht wurde.'
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.NamedItemCollection#add:member(1)'
      - 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
      - 'excel!Excel.NamedItemCollection#context:member'
      - 'excel!Excel.NamedItemCollection#getCount:member(1)'
      - 'excel!Excel.NamedItemCollection#getItem:member(1)'
      - 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.NamedItemCollection#items:member'
      - 'excel!Excel.NamedItemCollection#load:member(1)'
  - uid: 'excel!Excel.NamedItemCollection#add:member(1)'
    summary: Fügt einen neuen Namen zur Auflistung des angegebenen Bereichs hinzu.
    name: 'add(name, reference, comment)'
    fullName: 'add(name, reference, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let headerRange = sheet.getRange("A1:D1");

              sheet.names.add("ExpensesHeader", headerRange);
              let namedItems = sheet.names.load("name, type");

              await context.sync();
          }
          ```
      parameters:
        - id: name
          description: Der Name des benannten Elements.
          type:
            - string
        - id: reference
          description: 'Die Formel oder der Bereich, auf die bzw. den der Name verweist.'
          type:
            - 'excel!Excel.NamedItemCollection#add~0:complex'
        - id: comment
          description: Optional. Der dem benannten Element zugeordnete Kommentar.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#addFormulaLocal:member(1)'
    summary: Fügt einen neuen Namen zu der Auflistung des angegebenen Bereichs unter Verwendung des Gebietsschemas des Benutzers für die Formel hinzu.
    name: 'addFormulaLocal(name, formula, comment)'
    fullName: 'addFormulaLocal(name, formula, comment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: name
          description: Der „Name“ des benannten Elements.
          type:
            - string
        - id: formula
          description: 'Die Formel im Gebietsschema des Benutzers, auf die der Name verweist.'
          type:
            - string
        - id: comment
          description: Optional. Der dem benannten Element zugeordnete Kommentar.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedItemCollection#getCount:member(1)'
    summary: Ruft die Anzahl von benannten Elementen in der Auflistung ab.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.NamedItemCollection#getItem:member(1)'
    summary: Ruft ein NamedItem-Objekt mit seinem Namen ab.
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: name
          description: NamedItem-Name.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#getItemOrNullObject:member(1)'
    summary: 'Ruft ein NamedItem-Objekt mit seinem Namen ab. Wenn das nameditem-Objekt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.'
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: name
          description: NamedItem-Name.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#items:member'
    summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type:
          - 'excel!Excel.NamedItemCollection#items~0:complex'
  - uid: 'excel!Excel.NamedItemCollection#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.NamedItem:class'
    name: NamedItem
    fullName: Excel.NamedItem
  - uid: 'excel!Excel.NamedItemCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.NamedItemCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.NamedItemCollection#items~0:complex'
    name: 'Excel.NamedItem[]'
    fullName: 'Excel.NamedItem[]'
    spec.typeScript:
      - uid: 'excel!Excel.NamedItem:class'
        name: Excel.NamedItem
        fullName: Excel.NamedItem
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: NamedItemCollection
    fullName: Excel.NamedItemCollection