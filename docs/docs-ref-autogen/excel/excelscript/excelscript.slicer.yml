### YamlMime:TSType
name: ExcelScript.Slicer
uid: ExcelScript!ExcelScript.Slicer:interface
package: ExcelScript!
fullName: ExcelScript.Slicer
summary: Stellt ein `Slicer` Objekt in der Arbeitsmappe dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: clearFilters()
  uid: ExcelScript!ExcelScript.Slicer#clearFilters:member(1)
  package: ExcelScript!
  fullName: clearFilters()
  summary: Löscht alle Filter, die derzeit für den Datenschnitt verwendet werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearFilters(): void;'
    return:
      type: void
      description: ''
- name: delete()
  uid: ExcelScript!ExcelScript.Slicer#delete:member(1)
  package: ExcelScript!
  fullName: delete()
  summary: Löscht den Datenschnitt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: getCaption()
  uid: ExcelScript!ExcelScript.Slicer#getCaption:member(1)
  package: ExcelScript!
  fullName: getCaption()
  summary: Stellt die Beschriftung des Datenschnitts dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCaption(): string;'
    return:
      type: string
      description: ''
- name: getHeight()
  uid: ExcelScript!ExcelScript.Slicer#getHeight:member(1)
  package: ExcelScript!
  fullName: getHeight()
  summary: Stellt die Höhe des Datenschnitts in typografischen Punkten dar. Gibt eine Ausnahme `InvalidArgument` aus, wenn sie mit einem negativen Wert oder null als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHeight(): number;'
    return:
      type: number
      description: ''
- name: getId()
  uid: ExcelScript!ExcelScript.Slicer#getId:member(1)
  package: ExcelScript!
  fullName: getId()
  summary: Stellt die eindeutige ID des Datenschnitts dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getId(): string;'
    return:
      type: string
      description: ''
- name: getIsFilterCleared()
  uid: ExcelScript!ExcelScript.Slicer#getIsFilterCleared:member(1)
  package: ExcelScript!
  fullName: getIsFilterCleared()
  summary: Der Wert ist, wenn alle derzeit auf den Datenschnitt angewendeten `true` Filter geleert werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsFilterCleared(): boolean;'
    return:
      type: boolean
      description: ''
- name: getLeft()
  uid: ExcelScript!ExcelScript.Slicer#getLeft:member(1)
  package: ExcelScript!
  fullName: getLeft()
  summary: Stellt den Abstand in Punkt von der linken Seite des Datenschnitts zur linken Seite des Arbeitsblatts dar. Gibt einen Fehler `InvalidArgument` zurück, wenn er mit einem negativen Wert als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLeft(): number;'
    return:
      type: number
      description: ''
- name: getName()
  uid: ExcelScript!ExcelScript.Slicer#getName:member(1)
  package: ExcelScript!
  fullName: getName()
  summary: Stellt den Namen des Datenschnitts dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getName(): string;'
    return:
      type: string
      description: ''
- name: getSelectedItems()
  uid: ExcelScript!ExcelScript.Slicer#getSelectedItems:member(1)
  package: ExcelScript!
  fullName: getSelectedItems()
  summary: Gibt ein Array mit den Schlüsseln der ausgewählten Elemente zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedItems(): string[];'
    return:
      type: string[]
      description: ''
- name: getSlicerItem(key)
  uid: ExcelScript!ExcelScript.Slicer#getSlicerItem:member(1)
  package: ExcelScript!
  fullName: getSlicerItem(key)
  summary: Ruft ein Datenschnittelement anhand seines Schlüssels oder Namens ab. Wenn das Datenschnittelement nicht vorhanden ist, gibt diese Funktion ein Objekt zurück, dessen `isNullObject` Eigenschaft auf festgelegt ist. `true`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSlicerItem(key: string): SlicerItem | undefined;'
    parameters:
    - id: key
      description: Schlüssel oder Name des datenschnitts, der abgerufen werden soll.
      type: string
    return:
      type: <xref uid="ExcelScript!ExcelScript.SlicerItem:interface" /> | undefined
      description: ''
- name: getSlicerItems()
  uid: ExcelScript!ExcelScript.Slicer#getSlicerItems:member(1)
  package: ExcelScript!
  fullName: getSlicerItems()
  summary: Stellt die Auflistung von Datenschnittelementen dar, die Teil des Datenschnitts sind.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSlicerItems(): SlicerItem[];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.SlicerItem:interface" />[]
      description: ''
- name: getSortBy()
  uid: ExcelScript!ExcelScript.Slicer#getSortBy:member(1)
  package: ExcelScript!
  fullName: getSortBy()
  summary: 'Stellt die Sortierreihenfolge der Elemente im Datenschnitt dar. Mögliche Werte sind: "DataSourceOrder", "Ascending", "Descending".'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSortBy(): SlicerSortType;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.SlicerSortType:enum" />
      description: ''
- name: getStyle()
  uid: ExcelScript!ExcelScript.Slicer#getStyle:member(1)
  package: ExcelScript!
  fullName: getStyle()
  summary: 'Konstantenwert, der die Datenschnittart darstellt. Mögliche Werte sind: "SlicerStyleLight1" über "SlicerStyleLight6", "TableStyleOther1" über "TableStyleOther2", "SlicerStyleDark1" bis "SlicerStyleDark6". Es kann ebenfalls eine in der Arbeitsmappe vorhandene benutzerdefinierte Formatierung angegeben werden.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getStyle(): string;'
    return:
      type: string
      description: ''
- name: getTop()
  uid: ExcelScript!ExcelScript.Slicer#getTop:member(1)
  package: ExcelScript!
  fullName: getTop()
  summary: Stellt den Abstand in Punkt von der Oberkante des Datenschnitts zur Oberkante des Arbeitsblatts dar. Gibt einen Fehler `InvalidArgument` zurück, wenn er mit einem negativen Wert als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTop(): number;'
    return:
      type: number
      description: ''
- name: getWidth()
  uid: ExcelScript!ExcelScript.Slicer#getWidth:member(1)
  package: ExcelScript!
  fullName: getWidth()
  summary: Die Breite des Datenschnitts in Punkten. Gibt einen Fehler `InvalidArgument` zurück, wenn er mit einem negativen Wert oder null als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWidth(): number;'
    return:
      type: number
      description: ''
- name: getWorksheet()
  uid: ExcelScript!ExcelScript.Slicer#getWorksheet:member(1)
  package: ExcelScript!
  fullName: getWorksheet()
  summary: Stellt das Arbeitsblatt dar, das den Datenschnitt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWorksheet(): Worksheet;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Worksheet:interface" />
      description: ''
- name: selectItems(items)
  uid: ExcelScript!ExcelScript.Slicer#selectItems:member(1)
  package: ExcelScript!
  fullName: selectItems(items)
  summary: Wählt Datenschnittelemente basierend auf ihren Schlüsseln aus. Die vorherige Auswahl wird geräumt. Alle Elemente werden standardmäßig ausgewählt, wenn das Array leer ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'selectItems(items?: string[]): void;'
    parameters:
    - id: items
      description: Optional. Die angegebenen Datenschnittelementnamen, die ausgewählt werden sollen.
      type: string[]
    return:
      type: void
      description: ''
- name: setCaption(caption)
  uid: ExcelScript!ExcelScript.Slicer#setCaption:member(1)
  package: ExcelScript!
  fullName: setCaption(caption)
  summary: Stellt die Beschriftung des Datenschnitts dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setCaption(caption: string): void;'
    parameters:
    - id: caption
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setHeight(height)
  uid: ExcelScript!ExcelScript.Slicer#setHeight:member(1)
  package: ExcelScript!
  fullName: setHeight(height)
  summary: Stellt die Höhe des Datenschnitts in typografischen Punkten dar. Gibt eine Ausnahme `InvalidArgument` aus, wenn sie mit einem negativen Wert oder null als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setHeight(height: number): void;'
    parameters:
    - id: height
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setLeft(left)
  uid: ExcelScript!ExcelScript.Slicer#setLeft:member(1)
  package: ExcelScript!
  fullName: setLeft(left)
  summary: Stellt den Abstand in Punkt von der linken Seite des Datenschnitts zur linken Seite des Arbeitsblatts dar. Gibt einen Fehler `InvalidArgument` zurück, wenn er mit einem negativen Wert als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setLeft(left: number): void;'
    parameters:
    - id: left
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setName(name)
  uid: ExcelScript!ExcelScript.Slicer#setName:member(1)
  package: ExcelScript!
  fullName: setName(name)
  summary: Stellt den Namen des Datenschnitts dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setName(name: string): void;'
    parameters:
    - id: name
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setSortBy(sortBy)
  uid: ExcelScript!ExcelScript.Slicer#setSortBy:member(1)
  package: ExcelScript!
  fullName: setSortBy(sortBy)
  summary: 'Stellt die Sortierreihenfolge der Elemente im Datenschnitt dar. Mögliche Werte sind: "DataSourceOrder", "Ascending", "Descending".'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setSortBy(sortBy: SlicerSortType): void;'
    parameters:
    - id: sortBy
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.SlicerSortType:enum" />
    return:
      type: void
      description: ''
- name: setStyle(style)
  uid: ExcelScript!ExcelScript.Slicer#setStyle:member(1)
  package: ExcelScript!
  fullName: setStyle(style)
  summary: 'Konstantenwert, der die Datenschnittart darstellt. Mögliche Werte sind: "SlicerStyleLight1" über "SlicerStyleLight6", "TableStyleOther1" über "TableStyleOther2", "SlicerStyleDark1" bis "SlicerStyleDark6". Es kann ebenfalls eine in der Arbeitsmappe vorhandene benutzerdefinierte Formatierung angegeben werden.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setStyle(style: string): void;'
    parameters:
    - id: style
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: setTop(top)
  uid: ExcelScript!ExcelScript.Slicer#setTop:member(1)
  package: ExcelScript!
  fullName: setTop(top)
  summary: Stellt den Abstand in Punkt von der Oberkante des Datenschnitts zur Oberkante des Arbeitsblatts dar. Gibt einen Fehler `InvalidArgument` zurück, wenn er mit einem negativen Wert als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setTop(top: number): void;'
    parameters:
    - id: top
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setWidth(width)
  uid: ExcelScript!ExcelScript.Slicer#setWidth:member(1)
  package: ExcelScript!
  fullName: setWidth(width)
  summary: Die Breite des Datenschnitts in Punkten. Gibt einen Fehler `InvalidArgument` zurück, wenn er mit einem negativen Wert oder null als Eingabe festgelegt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setWidth(width: number): void;'
    parameters:
    - id: width
      description: ''
      type: number
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: e77939566a567014410472a3a707d5c624220469
  ms.sourcegitcommit: c59beb1eedc28c06a7d723b425b3fb7954865491
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 04/07/2021
  ms.locfileid: "51606011"
