### YamlMime:TSType
name: ExcelScript.PivotField
uid: 'ExcelScript!ExcelScript.PivotField:interface'
package: ExcelScript!
fullName: ExcelScript.PivotField
summary: Stellt das Excel PivotField dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: applyFilter(filter)
    uid: 'ExcelScript!ExcelScript.PivotField#applyFilter:member(1)'
    package: ExcelScript!
    fullName: applyFilter(filter)
    summary: 'Legt einen oder mehrere der aktuellen PivotFilter des Felds fest und wendet sie auf das Feld an. Wenn die bereitgestellten Filter ungültig sind oder nicht angewendet werden können, wird eine Ausnahme ausgelöst.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'applyFilter(filter: PivotFilters): void;'
      parameters:
        - id: filter
          description: 'Ein konfigurierter bestimmter PivotFilter oder eine PivotFilters-Schnittstelle, die mehrere konfigurierte Filter enthält.'
          type: '<xref uid="ExcelScript!ExcelScript.PivotFilters:interface" />'
      return:
        type: void
        description: ''
  - name: clearAllFilters()
    uid: 'ExcelScript!ExcelScript.PivotField#clearAllFilters:member(1)'
    package: ExcelScript!
    fullName: clearAllFilters()
    summary: Löscht alle Kriterien aus allen Filtern des Felds. Dadurch werden alle aktiven Filter für das Feld entfernt.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearAllFilters(): void;'
      return:
        type: void
        description: ''
  - name: clearFilter(filterType)
    uid: 'ExcelScript!ExcelScript.PivotField#clearFilter:member(1)'
    package: ExcelScript!
    fullName: clearFilter(filterType)
    summary: Löscht alle vorhandenen Kriterien aus dem Feldfilter des angegebenen Typs (sofern derzeit eines angewendet wird).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clearFilter(filterType: PivotFilterType): void;'
      parameters:
        - id: filterType
          description: 'Der Filtertyp für das Feld, für das alle Kriterien gelöscht werden sollen.'
          type: '<xref uid="ExcelScript!ExcelScript.PivotFilterType:enum" />'
      return:
        type: void
        description: ''
  - name: getFilters()
    uid: 'ExcelScript!ExcelScript.PivotField#getFilters:member(1)'
    package: ExcelScript!
    fullName: getFilters()
    summary: 'Ruft alle Filter ab, die derzeit auf das Feld angewendet werden.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getFilters(): PivotFilters;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotFilters:interface" />'
        description: ''
  - name: getId()
    uid: 'ExcelScript!ExcelScript.PivotField#getId:member(1)'
    package: ExcelScript!
    fullName: getId()
    summary: DIE ID des PivotFields.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getId(): string;'
      return:
        type: string
        description: ''
  - name: getItems()
    uid: 'ExcelScript!ExcelScript.PivotField#getItems:member(1)'
    package: ExcelScript!
    fullName: getItems()
    summary: 'Gibt die PivotFields-Objekte zurück, die dem PivotField-Objekt zugeordnet sind.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getItems(): PivotItem[];'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotItem:interface" />[]'
        description: ''
  - name: getName()
    uid: 'ExcelScript!ExcelScript.PivotField#getName:member(1)'
    package: ExcelScript!
    fullName: getName()
    summary: Der Name von PivotField.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getName(): string;'
      return:
        type: string
        description: ''
  - name: getPivotItem(name)
    uid: 'ExcelScript!ExcelScript.PivotField#getPivotItem:member(1)'
    package: ExcelScript!
    fullName: getPivotItem(name)
    summary: 'Ruft ein PivotItem anhand des Namens ab. Wenn das PivotItem nicht vorhanden ist, gibt diese Funktion ein Objekt zurück, dessen `isNullObject` Eigenschaft auf `true`<!-- -->.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getPivotItem(name: string): PivotItem | undefined;'
      parameters:
        - id: name
          description: Name des abzurufenden PivotItem.
          type: string
      return:
        type: '<xref uid="ExcelScript!ExcelScript.PivotItem:interface" /> | undefined'
        description: ''
  - name: getShowAllItems()
    uid: 'ExcelScript!ExcelScript.PivotField#getShowAllItems:member(1)'
    package: ExcelScript!
    fullName: getShowAllItems()
    summary: 'Legt fest, ob alle Elemente des PivotField-Objekts angezeigt werden.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getShowAllItems(): boolean;'
      return:
        type: boolean
        description: ''
  - name: getSubtotals()
    uid: 'ExcelScript!ExcelScript.PivotField#getSubtotals:member(1)'
    package: ExcelScript!
    fullName: getSubtotals()
    summary: Zwischensumme von PivotField
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'getSubtotals(): Subtotals;'
      return:
        type: '<xref uid="ExcelScript!ExcelScript.Subtotals:interface" />'
        description: ''
  - name: isFiltered(filterType)
    uid: 'ExcelScript!ExcelScript.PivotField#isFiltered:member(1)'
    package: ExcelScript!
    fullName: isFiltered(filterType)
    summary: 'Überprüft, ob auf das Feld angewendete Filter vorhanden sind.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isFiltered(filterType?: PivotFilterType): boolean;'
      parameters:
        - id: filterType
          description: 'Der zu überprüfende Filtertyp. Wenn kein Typ angegeben wird, überprüft diese Methode, ob ein Filter angewendet wird.'
          type: '<xref uid="ExcelScript!ExcelScript.PivotFilterType:enum" />'
      return:
        type: boolean
        description: ''
  - name: setName(name)
    uid: 'ExcelScript!ExcelScript.PivotField#setName:member(1)'
    package: ExcelScript!
    fullName: setName(name)
    summary: Der Name von PivotField.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setName(name: string): void;'
      parameters:
        - id: name
          description: ''
          type: string
      return:
        type: void
        description: ''
  - name: setShowAllItems(showAllItems)
    uid: 'ExcelScript!ExcelScript.PivotField#setShowAllItems:member(1)'
    package: ExcelScript!
    fullName: setShowAllItems(showAllItems)
    summary: 'Legt fest, ob alle Elemente des PivotField-Objekts angezeigt werden.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setShowAllItems(showAllItems: boolean): void;'
      parameters:
        - id: showAllItems
          description: ''
          type: boolean
      return:
        type: void
        description: ''
  - name: setSubtotals(subtotals)
    uid: 'ExcelScript!ExcelScript.PivotField#setSubtotals:member(1)'
    package: ExcelScript!
    fullName: setSubtotals(subtotals)
    summary: Zwischensumme von PivotField
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'setSubtotals(subtotals: Subtotals): void;'
      parameters:
        - id: subtotals
          description: ''
          type: '<xref uid="ExcelScript!ExcelScript.Subtotals:interface" />'
      return:
        type: void
        description: ''
  - name: sortByLabels(sortBy)
    uid: 'ExcelScript!ExcelScript.PivotField#sortByLabels:member(1)'
    package: ExcelScript!
    fullName: sortByLabels(sortBy)
    summary: 'Sortiert das PivotField-Objekt. Wenn ein DataPivotHierarchy-Objekt angegeben ist, wird die Sortierung basierend auf diesem Objekt angewendet. Andernfalls erfolgt die Sortierung auf Grundlage von PivotField.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      parameters:
        - id: sortBy
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type: '<xref uid="ExcelScript!ExcelScript.SortBy:enum" />'
      return:
        type: void
        description: ''
  - name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    uid: 'ExcelScript!ExcelScript.PivotField#sortByValues:member(1)'
    package: ExcelScript!
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    summary: 'Sortiert das PivotField in einem bestimmten Bereich nach den angegebenen Werten. Der Bereich definiert, welche spezifischen Werte zum Sortieren verwendet werden, wenn mehrere Werte aus demselben DataPivotHierarchy-Objekt vorhanden sind.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: |-
        sortByValues(
                    sortBy: SortBy,
                    valuesHierarchy: DataPivotHierarchy,
                    pivotItemScope?: Array<PivotItem | string>
                ): void;
      parameters:
        - id: sortBy
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type: '<xref uid="ExcelScript!ExcelScript.SortBy:enum" />'
        - id: valuesHierarchy
          description: 'Gibt die Wertehierarchie auf der Datenachse an, die für die Sortierung verwendet werden soll.'
          type: '<xref uid="ExcelScript!ExcelScript.DataPivotHierarchy:interface" />'
        - id: pivotItemScope
          description: 'Die Elemente, die für den Sortierbereich verwendet werden sollen. Dies sind die Elemente, die die Zeile oder Spalte bilden, nach der sortiert werden soll. Wenn anstelle eines PivotItem eine Zeichenfolge verwendet wird, stellt die Zeichenfolge die ID des PivotItem dar. Wenn keine anderen Elemente als die Datenhierarchie auf der Achse vorhanden sind, nach der Sortiert werden soll, kann dies leer sein.'
          type: |-
            Array&lt;<xref uid="ExcelScript!ExcelScript.PivotItem:interface" /> | string&gt;
                    
      return:
        type: void
        description: ''