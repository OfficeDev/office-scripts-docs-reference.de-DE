### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.PivotField:interface'
    summary: Stellt das Excel-PivotField dar.
    name: ExcelScript.PivotField
    fullName: ExcelScript.PivotField
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.PivotField#applyFilter:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#clearAllFilters:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#clearFilter:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getFilters:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getId:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getItems:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getName:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getPivotItem:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getShowAllItems:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#getSubtotals:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#isFiltered:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#setName:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#setShowAllItems:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#setSubtotals:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#sortByLabels:member(1)'
      - 'ExcelScript!ExcelScript.PivotField#sortByValues:member(1)'
  - uid: 'ExcelScript!ExcelScript.PivotField#applyFilter:member(1)'
    summary: 'Legt eine oder mehrere der aktuellen PivotFilters des Felds fest und wendet Sie auf das Feld an. Wenn die bereitgestellten Filter ungültig sind oder nicht angewendet werden können, wird eine Ausnahme ausgelöst.'
    name: applyFilter(filter)
    fullName: applyFilter(filter)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFilter(filter: PivotFilters): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filter
          description: Ein konfigurierter bestimmter PivotFilter oder eine PivotFilters-Schnittstelle mit mehreren konfigurierten filtern.
          type:
            - 'ExcelScript!ExcelScript.PivotFilters:interface'
  - uid: 'ExcelScript!ExcelScript.PivotField#clearAllFilters:member(1)'
    summary: Löscht alle Kriterien aus allen Filtern des Felds. Dadurch werden alle aktiven Filter für das Feld entfernt.
    name: clearAllFilters()
    fullName: clearAllFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAllFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#clearFilter:member(1)'
    summary: Löscht alle vorhandenen Kriterien aus dem Filter des Felds des angegebenen Typs (sofern eine derzeit angewendet wird).
    name: clearFilter(filterType)
    fullName: clearFilter(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterType: PivotFilterType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterType
          description: 'Der Typ des Filters für das Feld, dessen alle Kriterien gelöscht werden sollen.'
          type:
            - 'ExcelScript!ExcelScript.PivotFilterType:enum'
  - uid: 'ExcelScript!ExcelScript.PivotField#getFilters:member(1)'
    summary: Ruft alle derzeit auf das Feld angewendeten Filter ab.
    name: getFilters()
    fullName: getFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilters(): PivotFilters;'
      return:
        type:
          - 'ExcelScript!ExcelScript.PivotFilters:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#getId:member(1)'
    summary: Die ID von PivotField.
    name: getId()
    fullName: getId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getId(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#getItems:member(1)'
    summary: 'Gibt die PivotFields-Objekte zurück, die dem PivotField-Objekt zugeordnet sind.'
    name: getItems()
    fullName: getItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItems(): PivotItem[];'
      return:
        type:
          - 'ExcelScript!ExcelScript.PivotField#getItems~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#getName:member(1)'
    summary: Der Name von PivotField.
    name: getName()
    fullName: getName()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getName(): string;'
      return:
        type:
          - string
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#getPivotItem:member(1)'
    summary: 'Ruft ein PivotItem nach Namen ab. Wenn der PivotItem nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.'
    name: getPivotItem(name)
    fullName: getPivotItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItem(name: string): PivotItem | undefined;'
      return:
        type:
          - 'ExcelScript!ExcelScript.PivotField#getPivotItem~0:complex'
        description: ''
      parameters:
        - id: name
          description: 'Name des PivotItem, das abgerufen werden soll.'
          type:
            - string
  - uid: 'ExcelScript!ExcelScript.PivotField#getShowAllItems:member(1)'
    summary: 'Legt fest, ob alle Elemente des PivotField-Objekts angezeigt werden.'
    name: getShowAllItems()
    fullName: getShowAllItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getShowAllItems(): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#getSubtotals:member(1)'
    summary: Zwischensumme von PivotField
    name: getSubtotals()
    fullName: getSubtotals()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSubtotals(): Subtotals;'
      return:
        type:
          - 'ExcelScript!ExcelScript.Subtotals:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.PivotField#isFiltered:member(1)'
    summary: 'Überprüft, ob für das Feld Filter angewendet wurden.'
    name: isFiltered(filterType)
    fullName: isFiltered(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterType?: PivotFilterType): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: filterType
          description: 'Der zu überprüfende Filtertyp. Wenn kein Typ angegeben wird, prüft diese Methode, ob ein Filter angewendet wird.'
          type:
            - 'ExcelScript!ExcelScript.PivotFilterType:enum'
  - uid: 'ExcelScript!ExcelScript.PivotField#setName:member(1)'
    summary: Der Name von PivotField.
    name: setName(name)
    fullName: setName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setName(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: 'ExcelScript!ExcelScript.PivotField#setShowAllItems:member(1)'
    summary: 'Legt fest, ob alle Elemente des PivotField-Objekts angezeigt werden.'
    name: setShowAllItems(showAllItems)
    fullName: setShowAllItems(showAllItems)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShowAllItems(showAllItems: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: showAllItems
          description: ''
          type:
            - boolean
  - uid: 'ExcelScript!ExcelScript.PivotField#setSubtotals:member(1)'
    summary: Zwischensumme von PivotField
    name: setSubtotals(subtotals)
    fullName: setSubtotals(subtotals)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSubtotals(subtotals: Subtotals): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: subtotals
          description: ''
          type:
            - 'ExcelScript!ExcelScript.Subtotals:interface'
  - uid: 'ExcelScript!ExcelScript.PivotField#sortByLabels:member(1)'
    summary: 'Sortiert das PivotField-Objekt. Wenn ein DataPivotHierarchy-Objekt angegeben ist, wird die Sortierung basierend auf diesem Objekt angewendet. Andernfalls erfolgt die Sortierung auf Grundlage von PivotField.'
    name: sortByLabels(sortBy)
    fullName: sortByLabels(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type:
            - 'ExcelScript!ExcelScript.SortBy:enum'
  - uid: 'ExcelScript!ExcelScript.PivotField#sortByValues:member(1)'
    summary: 'Sortiert das PivotField in einem bestimmten Bereich nach den angegebenen Werten. Der Bereich definiert, welche bestimmten Werte zum Sortieren verwendet werden, wenn mehrere Werte aus demselben DataPivotHierarchy vorhanden sind.'
    name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        sortByValues(
                    sortBy: SortBy,
                    valuesHierarchy: DataPivotHierarchy,
                    pivotItemScope?: Array<PivotItem | string>
                ): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type:
            - 'ExcelScript!ExcelScript.SortBy:enum'
        - id: valuesHierarchy
          description: 'Gibt die Wertehierarchie auf der Datenachse an, die für die Sortierung verwendet werden soll.'
          type:
            - 'ExcelScript!ExcelScript.DataPivotHierarchy:interface'
        - id: pivotItemScope
          description: 'Die Elemente, die für den Bereich der Sortierung verwendet werden sollen. Dabei handelt es sich um die Elemente, aus denen die Zeile oder Spalte besteht, nach der sortiert werden soll. Wenn anstelle eines PivotItem eine Zeichenfolge verwendet wird, stellt die Zeichenfolge die ID der PivotItem dar. Wenn keine anderen Elemente als die Datenhierarchie auf der Achse vorhanden sind, nach der sortiert werden soll, kann dies leer sein.'
          type:
            - 'ExcelScript!ExcelScript.PivotField#sortByValues~0:complex'
references:
  - uid: 'ExcelScript!ExcelScript.PivotFilters:interface'
    name: PivotFilters
    fullName: ExcelScript.PivotFilters
  - uid: 'ExcelScript!ExcelScript.PivotFilterType:enum'
    name: PivotFilterType
    fullName: ExcelScript.PivotFilterType
  - uid: 'ExcelScript!ExcelScript.PivotField#getItems~0:complex'
    name: 'PivotItem[]'
    fullName: 'ExcelScript.PivotItem[]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.PivotItem:interface'
        name: PivotItem
        fullName: ExcelScript.PivotItem
      - name: '[]'
        fullName: '[]'
  - uid: 'ExcelScript!ExcelScript.PivotField#getPivotItem~0:complex'
    name: PivotItem | undefined
    fullName: ExcelScript.PivotItem | undefined
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.PivotItem:interface'
        name: PivotItem
        fullName: ExcelScript.PivotItem
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'ExcelScript!ExcelScript.Subtotals:interface'
    name: Subtotals
    fullName: ExcelScript.Subtotals
  - uid: 'ExcelScript!ExcelScript.SortBy:enum'
    name: SortBy
    fullName: ExcelScript.SortBy
  - uid: 'ExcelScript!ExcelScript.DataPivotHierarchy:interface'
    name: DataPivotHierarchy
    fullName: ExcelScript.DataPivotHierarchy
  - uid: 'ExcelScript!ExcelScript.PivotField#sortByValues~0:complex'
    name: Array<PivotItem | string>
    fullName: Array<ExcelScript.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'ExcelScript!ExcelScript.PivotItem:interface'
        name: PivotItem
        fullName: ExcelScript.PivotItem
      - name: |2-
           | string>
                  
        fullName: |2-
           | string>