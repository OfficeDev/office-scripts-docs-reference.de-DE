### YamlMime:TSType
name: ExcelScript.RangeFormat
uid: ExcelScript!ExcelScript.RangeFormat:interface
package: ExcelScript!
fullName: ExcelScript.RangeFormat
summary: Gibt ein Formatobjekt zurück, das die Schriftart des Bereichs, Füllung, Rahmen, die Ausrichtung und andere Eigenschaften verschachtelt.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: adjustIndent(amount)
  uid: ExcelScript!ExcelScript.RangeFormat#adjustIndent:member(1)
  package: ExcelScript!
  fullName: adjustIndent(amount)
  summary: Passt den Einzug der Bereichsformatierung an. Der Einzugswert reicht von 0 bis 250 und wird in Zeichen gemessen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'adjustIndent(amount: number): void;'
    parameters:
    - id: amount
      description: 'Die Anzahl der Zeichenplätze, um die der aktuelle Einzug angepasst wird. Dieser Wert sollte zwischen -250 und 250 sein. **Hinweis**: Wenn der Betrag die Einzugsebene über 250 erhöhen würde, bleibt die Einzugsebene bei 250. Wenn der Betrag die Einzugsebene unter 0 senken würde, bleibt die Einzugsebene 0.'
      type: number
    return:
      type: void
      description: ''
- name: autofitColumns()
  uid: ExcelScript!ExcelScript.RangeFormat#autofitColumns:member(1)
  package: ExcelScript!
  fullName: autofitColumns()
  summary: Ändert die Breite der Spalten des aktuellen Bereichs, um basierend auf den aktuellen Daten in den Spalten die optimale Breite zu erzielen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autofitColumns(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script creates a new table from existing data and autofits the columns.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Create the table.\n  const table = currentSheet.addTable(usedRange, true);\n\n  // Format the table columns.\n  table.getRange().getFormat().autofitColumns();\n}\n```"
- name: autofitRows()
  uid: ExcelScript!ExcelScript.RangeFormat#autofitRows:member(1)
  package: ExcelScript!
  fullName: autofitRows()
  summary: Ändert die Höhe der Zeilen des aktuellen Bereichs, um basierend auf den aktuellen Daten in den Zeilen die optimale Höhe zu erzielen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autofitRows(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script creates a new table from existing data and autofits the rows.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Create the table.\n  const table = currentSheet.addTable(usedRange, true);\n\n  // Format the table rows.\n  table.getRange().getFormat().autofitRows();\n}\n```"
- name: getAutoIndent()
  uid: ExcelScript!ExcelScript.RangeFormat#getAutoIndent:member(1)
  package: ExcelScript!
  fullName: getAutoIndent()
  summary: Gibt an, ob Text automatisch eingezogen wird, wenn die Textausrichtung auf eine gleiche Verteilung festgelegt ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAutoIndent(): boolean;'
    return:
      type: boolean
      description: ''
- name: getBorders()
  uid: ExcelScript!ExcelScript.RangeFormat#getBorders:member(1)
  package: ExcelScript!
  fullName: getBorders()
  summary: Auflistung von Border-Objekten, die für den gesamten ausgewählten Bereich gelten.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBorders(): RangeBorder[];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeBorder:interface" />[]
      description: ''
- name: getColumnWidth()
  uid: ExcelScript!ExcelScript.RangeFormat#getColumnWidth:member(1)
  package: ExcelScript!
  fullName: getColumnWidth()
  summary: Gibt die Breite aller Spalten innerhalb des Bereichs an. Wenn die Spaltenbreiten nicht einheitlich sind, `null` wird zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnWidth(): number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script doubles the column width for every column in the active worksheet's used range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // To optimize performance, get all the current row heights before setting them.\n  let currentWidths = Array<number>(usedRange.getColumnCount());\n  for (let column = 0; column < currentWidths.length; column++) {\n    currentWidths[column] = usedRange.getColumn(column).getFormat().getColumnWidth();\n  }\n\n  // Set the new column widths.\n  for (let column = 0; column < currentWidths.length; column++) {\n    usedRange.getFormat().setColumnWidth(currentWidths[column] * 2);\n  }\n```"
- name: getFill()
  uid: ExcelScript!ExcelScript.RangeFormat#getFill:member(1)
  package: ExcelScript!
  fullName: getFill()
  summary: Gibt das Fill-Objekt an, das für den gesamten Bereich definiert ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFill(): RangeFill;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeFill:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script gives the total row of a table a green color fill.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the first table in the workbook.\n  let table = workbook.getTables()[0];\n\n  // Get the range for the total row of the table.\n  let totalRange = table.getTotalRowRange();\n\n  // Set the fill color to green.\n  totalRange.getFormat().getFill().setColor(\"green\");\n}\n```"
- name: getFont()
  uid: ExcelScript!ExcelScript.RangeFormat#getFont:member(1)
  package: ExcelScript!
  fullName: getFont()
  summary: Gibt das Font-Objekt an, das für den gesamten Bereich definiert ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFont(): RangeFont;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeFont:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script bolds the text of cell A1.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get A1 on the current worksheet.\n  const cell = workbook.getActiveWorksheet().getCell(0,0);\n\n  // Bold the font for that cell\n  cell.getFormat().getFont().setBold(true);\n}\n```"
- name: getHorizontalAlignment()
  uid: ExcelScript!ExcelScript.RangeFormat#getHorizontalAlignment:member(1)
  package: ExcelScript!
  fullName: getHorizontalAlignment()
  summary: Stellt die horizontale Ausrichtung für das angegebene Objekt dar. Weitere Informationen finden Sie `ExcelScript.HorizontalAlignment` unter.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHorizontalAlignment(): HorizontalAlignment;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.HorizontalAlignment:enum" />
      description: ''
- name: getIndentLevel()
  uid: ExcelScript!ExcelScript.RangeFormat#getIndentLevel:member(1)
  package: ExcelScript!
  fullName: getIndentLevel()
  summary: Eine ganze Zahl zwischen 0 und 250, die die Einzugsebene angibt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIndentLevel(): number;'
    return:
      type: number
      description: ''
- name: getProtection()
  uid: ExcelScript!ExcelScript.RangeFormat#getProtection:member(1)
  package: ExcelScript!
  fullName: getProtection()
  summary: Gibt das Formatschutz-Objekt für einen Bereich zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getProtection(): FormatProtection;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.FormatProtection:interface" />
      description: ''
- name: getRangeBorder(index)
  uid: ExcelScript!ExcelScript.RangeFormat#getRangeBorder:member(1)
  package: ExcelScript!
  fullName: getRangeBorder(index)
  summary: Ruft ein Rahmen-Objekt ab, das den Namen verwendet
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeBorder(index: BorderIndex): RangeBorder;'
    parameters:
    - id: index
      description: Index-Wert des abzurufenden Rahmen-Objekts. Weitere Informationen finden Sie `ExcelScript.BorderIndex` unter.
      type: <xref uid="ExcelScript!ExcelScript.BorderIndex:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeBorder:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script adds a border around the outside of a range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get a range from the current worksheet.\n  let range = workbook.getActiveWorksheet().getRange(\"B2:E15\");\n\n  // Add a border around the whole bounding range.\n  let format = range.getFormat();\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeTop).setStyle(ExcelScript.BorderLineStyle.continuous); // Top border\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeBottom).setStyle(ExcelScript.BorderLineStyle.continuous); // Bottom border\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeLeft).setStyle(ExcelScript.BorderLineStyle.continuous); // Left border\n  format.getRangeBorder(ExcelScript.BorderIndex.edgeRight).setStyle(ExcelScript.BorderLineStyle.continuous); // Right border\n}\n```"
- name: getRangeBorderTintAndShade()
  uid: ExcelScript!ExcelScript.RangeFormat#getRangeBorderTintAndShade:member(1)
  package: ExcelScript!
  fullName: getRangeBorderTintAndShade()
  summary: Gibt einen Double-Wert an, der eine Farbe für Bereichsrahmen aufhellt oder abdunkelt. Der Wert liegt zwischen -1 (dunkelster) und 1 (hellster), mit 0 für die Originalfarbe. Ein `null` Wert gibt an, dass die gesamte Rahmensammlung keine einheitliche `tintAndShade` Einstellung aufweist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeBorderTintAndShade(): number;'
    return:
      type: number
      description: ''
- name: getReadingOrder()
  uid: ExcelScript!ExcelScript.RangeFormat#getReadingOrder:member(1)
  package: ExcelScript!
  fullName: getReadingOrder()
  summary: Die Leserichtung für den Bereich.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getReadingOrder(): ReadingOrder;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ReadingOrder:enum" />
      description: ''
- name: getRowHeight()
  uid: ExcelScript!ExcelScript.RangeFormat#getRowHeight:member(1)
  package: ExcelScript!
  fullName: getRowHeight()
  summary: Die Höhe aller Zeilen im Bereich. Wenn die Zeilenhöhen nicht einheitlich sind, `null` wird zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowHeight(): number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script doubles the row height for every row in the active worksheet's used range.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // To optimize performance, get all the current row heights before setting them.\n  let currentHeights = Array<number>(usedRange.getRowCount());\n  for (let row = 0; row < currentHeights.length; row++) {\n    currentHeights[row] = usedRange.getRow(row).getFormat().getRowHeight();\n  }\n\n  // Set the new row heights.\n  for (let row = 0; row < currentHeights.length; row++) {\n    usedRange.getFormat().setRowHeight(currentHeights[row] * 2);\n  }\n}\n```"
- name: getShrinkToFit()
  uid: ExcelScript!ExcelScript.RangeFormat#getShrinkToFit:member(1)
  package: ExcelScript!
  fullName: getShrinkToFit()
  summary: Gibt an, ob Text automatisch so verkleinert wird, dass er in die verfügbare Spaltenbreite passt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getShrinkToFit(): boolean;'
    return:
      type: boolean
      description: ''
- name: getTextOrientation()
  uid: ExcelScript!ExcelScript.RangeFormat#getTextOrientation:member(1)
  package: ExcelScript!
  fullName: getTextOrientation()
  summary: Die Textausrichtung aller Zellen innerhalb des Bereichs. Die Textausrichtung sollte eine ganze Zahl zwischen -90 und 90 oder 180 für vertikal ausgerichteten Text sein. Wenn die Ausrichtung innerhalb eines Bereichs nicht einheitlich ist, `null` wird sie zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextOrientation(): number;'
    return:
      type: number
      description: ''
- name: getUseStandardHeight()
  uid: ExcelScript!ExcelScript.RangeFormat#getUseStandardHeight:member(1)
  package: ExcelScript!
  fullName: getUseStandardHeight()
  summary: 'Bestimmt, ob die Zeilenhöhe des `Range` Objekts der Standardhöhe des Blatts entspricht. Gibt zurück `true` , ob die Zeilenhöhe des `Range` Objekts der Standardhöhe des Blatts entspricht. Gibt zurück `null` , wenn der Bereich mehr als eine Zeile enthält und die Zeilen nicht alle dieselbe Höhe aufweisen. Gibt andernfalls zurück `false` . Hinweis: Diese Eigenschaft ist nur für die Festlegung auf `true`<!-- -->. Das Festlegen hat `false` keine Auswirkung.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUseStandardHeight(): boolean;'
    return:
      type: boolean
      description: ''
- name: getUseStandardWidth()
  uid: ExcelScript!ExcelScript.RangeFormat#getUseStandardWidth:member(1)
  package: ExcelScript!
  fullName: getUseStandardWidth()
  summary: 'Gibt an, ob die Spaltenbreite des `Range` Objekts der Standardbreite des Blatts entspricht. Gibt zurück `true` , ob die Spaltenbreite des `Range` Objekts der Standardbreite des Blatts entspricht. Gibt zurück `null` , wenn der Bereich mehr als eine Spalte enthält und die Spalten nicht alle die gleiche Höhe haben. Gibt andernfalls zurück `false` . Hinweis: Diese Eigenschaft ist nur für die Festlegung auf `true`<!-- -->. Das Festlegen hat `false` keine Auswirkung.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUseStandardWidth(): boolean;'
    return:
      type: boolean
      description: ''
- name: getVerticalAlignment()
  uid: ExcelScript!ExcelScript.RangeFormat#getVerticalAlignment:member(1)
  package: ExcelScript!
  fullName: getVerticalAlignment()
  summary: Stellt die vertikale Ausrichtung für das angegebene Objekt dar. Weitere Informationen finden Sie `ExcelScript.VerticalAlignment` unter.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getVerticalAlignment(): VerticalAlignment;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.VerticalAlignment:enum" />
      description: ''
- name: getWrapText()
  uid: ExcelScript!ExcelScript.RangeFormat#getWrapText:member(1)
  package: ExcelScript!
  fullName: getWrapText()
  summary: Gibt an, ob Excel den Text im Objekt umschließt. Ein `null` Wert gibt an, dass der gesamte Bereich keine einheitliche Umbrucheinstellung hat
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWrapText(): boolean;'
    return:
      type: boolean
      description: ''
- name: setAutoIndent(autoIndent)
  uid: ExcelScript!ExcelScript.RangeFormat#setAutoIndent:member(1)
  package: ExcelScript!
  fullName: setAutoIndent(autoIndent)
  summary: Gibt an, ob Text automatisch eingezogen wird, wenn die Textausrichtung auf eine gleiche Verteilung festgelegt ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAutoIndent(autoIndent: boolean): void;'
    parameters:
    - id: autoIndent
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setColumnWidth(columnWidth)
  uid: ExcelScript!ExcelScript.RangeFormat#setColumnWidth:member(1)
  package: ExcelScript!
  fullName: setColumnWidth(columnWidth)
  summary: Gibt die Breite aller Spalten innerhalb des Bereichs an. Wenn die Spaltenbreiten nicht einheitlich sind, `null` wird zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setColumnWidth(columnWidth: number): void;'
    parameters:
    - id: columnWidth
      description: ''
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script inserts a new column and sets that column's width to 100 pixels wide.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n\n  // Insert a new column between the current B and C columns.\n  const bcRange = currentSheet.getRange(\"C:C\");\n  const newColumn = bcRange.insert(ExcelScript.InsertShiftDirection.right);\n  \n  // Set the column width of the new column to 100 pixels.\n  newColumn.getFormat().setColumnWidth(100);\n}\n```"
- name: setHorizontalAlignment(horizontalAlignment)
  uid: ExcelScript!ExcelScript.RangeFormat#setHorizontalAlignment:member(1)
  package: ExcelScript!
  fullName: setHorizontalAlignment(horizontalAlignment)
  summary: Stellt die horizontale Ausrichtung für das angegebene Objekt dar. Weitere Informationen finden Sie `ExcelScript.HorizontalAlignment` unter.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setHorizontalAlignment(horizontalAlignment: HorizontalAlignment): void;'
    parameters:
    - id: horizontalAlignment
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.HorizontalAlignment:enum" />
    return:
      type: void
      description: ''
- name: setIndentLevel(indentLevel)
  uid: ExcelScript!ExcelScript.RangeFormat#setIndentLevel:member(1)
  package: ExcelScript!
  fullName: setIndentLevel(indentLevel)
  summary: Eine ganze Zahl zwischen 0 und 250, die die Einzugsebene angibt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setIndentLevel(indentLevel: number): void;'
    parameters:
    - id: indentLevel
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setRangeBorderTintAndShade(rangeBorderTintAndShade)
  uid: ExcelScript!ExcelScript.RangeFormat#setRangeBorderTintAndShade:member(1)
  package: ExcelScript!
  fullName: setRangeBorderTintAndShade(rangeBorderTintAndShade)
  summary: Gibt einen Double-Wert an, der eine Farbe für Bereichsrahmen aufhellt oder abdunkelt. Der Wert liegt zwischen -1 (dunkelster) und 1 (hellster), mit 0 für die Originalfarbe. Ein `null` Wert gibt an, dass die gesamte Rahmensammlung keine einheitliche `tintAndShade` Einstellung aufweist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setRangeBorderTintAndShade(rangeBorderTintAndShade: number): void;'
    parameters:
    - id: rangeBorderTintAndShade
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setReadingOrder(readingOrder)
  uid: ExcelScript!ExcelScript.RangeFormat#setReadingOrder:member(1)
  package: ExcelScript!
  fullName: setReadingOrder(readingOrder)
  summary: Die Leserichtung für den Bereich.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setReadingOrder(readingOrder: ReadingOrder): void;'
    parameters:
    - id: readingOrder
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.ReadingOrder:enum" />
    return:
      type: void
      description: ''
- name: setRowHeight(rowHeight)
  uid: ExcelScript!ExcelScript.RangeFormat#setRowHeight:member(1)
  package: ExcelScript!
  fullName: setRowHeight(rowHeight)
  summary: Die Höhe aller Zeilen im Bereich. Wenn die Zeilenhöhen nicht einheitlich sind, `null` wird zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setRowHeight(rowHeight: number): void;'
    parameters:
    - id: rowHeight
      description: ''
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```TypeScript\n/**\n * This script inserts a new row and sets that row's width to 100 pixels tall.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  const currentSheet = workbook.getActiveWorksheet();\n\n  // Insert a new row between the current 2 and 3 rows.\n  const bcRange = currentSheet.getRange(\"3:3\");\n  const newRow = bcRange.insert(ExcelScript.InsertShiftDirection.down);\n  \n  // Set the row height of the new row to 100 pixels.\n  newRow.getFormat().setRowHeight(100);\n}\n```"
- name: setShrinkToFit(shrinkToFit)
  uid: ExcelScript!ExcelScript.RangeFormat#setShrinkToFit:member(1)
  package: ExcelScript!
  fullName: setShrinkToFit(shrinkToFit)
  summary: Gibt an, ob Text automatisch so verkleinert wird, dass er in die verfügbare Spaltenbreite passt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setShrinkToFit(shrinkToFit: boolean): void;'
    parameters:
    - id: shrinkToFit
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setTextOrientation(textOrientation)
  uid: ExcelScript!ExcelScript.RangeFormat#setTextOrientation:member(1)
  package: ExcelScript!
  fullName: setTextOrientation(textOrientation)
  summary: Die Textausrichtung aller Zellen innerhalb des Bereichs. Die Textausrichtung sollte eine ganze Zahl zwischen -90 und 90 oder 180 für vertikal ausgerichteten Text sein. Wenn die Ausrichtung innerhalb eines Bereichs nicht einheitlich ist, `null` wird sie zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setTextOrientation(textOrientation: number): void;'
    parameters:
    - id: textOrientation
      description: ''
      type: number
    return:
      type: void
      description: ''
- name: setUseStandardHeight(useStandardHeight)
  uid: ExcelScript!ExcelScript.RangeFormat#setUseStandardHeight:member(1)
  package: ExcelScript!
  fullName: setUseStandardHeight(useStandardHeight)
  summary: 'Bestimmt, ob die Zeilenhöhe des `Range` Objekts der Standardhöhe des Blatts entspricht. Gibt zurück `true` , ob die Zeilenhöhe des `Range` Objekts der Standardhöhe des Blatts entspricht. Gibt zurück `null` , wenn der Bereich mehr als eine Zeile enthält und die Zeilen nicht alle dieselbe Höhe aufweisen. Gibt andernfalls zurück `false` . Hinweis: Diese Eigenschaft ist nur für die Festlegung auf `true`<!-- -->. Das Festlegen hat `false` keine Auswirkung.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setUseStandardHeight(useStandardHeight: boolean): void;'
    parameters:
    - id: useStandardHeight
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setUseStandardWidth(useStandardWidth)
  uid: ExcelScript!ExcelScript.RangeFormat#setUseStandardWidth:member(1)
  package: ExcelScript!
  fullName: setUseStandardWidth(useStandardWidth)
  summary: 'Gibt an, ob die Spaltenbreite des `Range` Objekts der Standardbreite des Blatts entspricht. Gibt zurück `true` , ob die Spaltenbreite des `Range` Objekts der Standardbreite des Blatts entspricht. Gibt zurück `null` , wenn der Bereich mehr als eine Spalte enthält und die Spalten nicht alle die gleiche Höhe haben. Gibt andernfalls zurück `false` . Hinweis: Diese Eigenschaft ist nur für die Festlegung auf `true`<!-- -->. Das Festlegen hat `false` keine Auswirkung.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setUseStandardWidth(useStandardWidth: boolean): void;'
    parameters:
    - id: useStandardWidth
      description: ''
      type: boolean
    return:
      type: void
      description: ''
- name: setVerticalAlignment(verticalAlignment)
  uid: ExcelScript!ExcelScript.RangeFormat#setVerticalAlignment:member(1)
  package: ExcelScript!
  fullName: setVerticalAlignment(verticalAlignment)
  summary: Stellt die vertikale Ausrichtung für das angegebene Objekt dar. Weitere Informationen finden Sie `ExcelScript.VerticalAlignment` unter.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setVerticalAlignment(verticalAlignment: VerticalAlignment): void;'
    parameters:
    - id: verticalAlignment
      description: ''
      type: <xref uid="ExcelScript!ExcelScript.VerticalAlignment:enum" />
    return:
      type: void
      description: ''
- name: setWrapText(wrapText)
  uid: ExcelScript!ExcelScript.RangeFormat#setWrapText:member(1)
  package: ExcelScript!
  fullName: setWrapText(wrapText)
  summary: Gibt an, ob Excel den Text im Objekt umschließt. Ein `null` Wert gibt an, dass der gesamte Bereich keine einheitliche Umbrucheinstellung hat
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setWrapText(wrapText: boolean): void;'
    parameters:
    - id: wrapText
      description: ''
      type: boolean
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 2e0aa07251e56260c03256716594889b1cf5d0cf
  ms.sourcegitcommit: dfc12de9e6eb5de71199b36f92ce93039509ad37
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/23/2022
  ms.locfileid: "63755984"
