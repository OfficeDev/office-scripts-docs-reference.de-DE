### YamlMime:UniversalReference
items:
  - uid: 'ExcelScript!ExcelScript.RangeView:interface'
    summary: RangeView stellt einen Satz von sichtbaren Zellen des übergeordneten Bereichs dar.
    name: ExcelScript.RangeView
    fullName: ExcelScript.RangeView
    langs:
      - typeScript
    type: interface
    package: ExcelScript!
    children:
      - 'ExcelScript!ExcelScript.RangeView#getCellAddresses:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getColumnCount:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getFormulas:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getFormulasLocal:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getFormulasR1C1:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getIndex:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getNumberFormat:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getRange:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getRowCount:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getRows:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getText:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getValues:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#getValueTypes:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setFormulas:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setFormulasLocal:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setFormulasR1C1:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setNumberFormat:member(1)'
      - 'ExcelScript!ExcelScript.RangeView#setValues:member(1)'
  - uid: 'ExcelScript!ExcelScript.RangeView#getCellAddresses:member(1)'
    summary: Stellt die Zelladressen des RangeView dar.
    name: getCellAddresses()
    fullName: getCellAddresses()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellAddresses(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getColumnCount:member(1)'
    summary: Die Anzahl der sichtbaren Spalten.
    name: getColumnCount()
    fullName: getColumnCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getFormulas:member(1)'
    summary: Stellt die Formel in der A1-Schreibweise dar.
    name: getFormulas()
    fullName: getFormulas()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormulas(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getFormulasLocal:member(1)'
    summary: 'Stellt die Formel in der A1-Schreibweise, Sprache des Benutzers und im Gebietsschema der Zahlenformatierung dar. Beispielsweise würde die englische Formel "= SUM(A1, 1.5)" in Deutsch "= SUMME(A1; 1,5) " werden.'
    name: getFormulasLocal()
    fullName: getFormulasLocal()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormulasLocal(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getFormulasR1C1:member(1)'
    summary: Stellt die Formel in der R1C1-Schreibweise dar.
    name: getFormulasR1C1()
    fullName: getFormulasR1C1()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormulasR1C1(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getIndex:member(1)'
    summary: 'Gibt einen Wert zurück, der den Index des RangeView darstellt.'
    name: getIndex()
    fullName: getIndex()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIndex(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getNumberFormat:member(1)'
    summary: Stellt den Excel-Zahlenformatcode für die angegebene Zelle dar.
    name: getNumberFormat()
    fullName: getNumberFormat()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNumberFormat(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getRange:member(1)'
    summary: Ruft den übergeordneten Bereich zum aktuellen RangeView ab.
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'ExcelScript!ExcelScript.Range:interface'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getRowCount:member(1)'
    summary: Die Anzahl der sichtbaren Zeilen.
    name: getRowCount()
    fullName: getRowCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getRows:member(1)'
    summary: Stellt eine Sammlung der mit dem Bereich verknüpften Bereichsansichten dar.
    name: getRows()
    fullName: getRows()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRows(): RangeView[];'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeView#getRows~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getText:member(1)'
    summary: 'Textwerte des angegebenen Bereichs. Der Textwert hängt nicht von der Zellenbreite ab. Die \# Zeichenersetzung, die in der Excel-Benutzeroberfläche geschieht, wirkt sich nicht auf den von der API zurückgegebenen Textwert aus.'
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): string[][];'
      return:
        type:
          - 'string[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getValues:member(1)'
    summary: 'Stellt die Rohwerte der angegebenen Bereichsansicht dar. Die zurückgegebenen Daten können vom Typ Zeichenfolge, Zahl oder ein boolescher Wert sein. Zellen, die einen Fehler enthalten, geben die Fehlerzeichenfolge zurück.'
    name: getValues()
    fullName: getValues()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getValues(): (string | number | boolean)[][];'
      return:
        type:
          - '(string | number | boolean)[][]'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#getValueTypes:member(1)'
    summary: Stellt den Datentyp in jeder Zelle dar.
    name: getValueTypes()
    fullName: getValueTypes()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getValueTypes(): RangeValueType[][];'
      return:
        type:
          - 'ExcelScript!ExcelScript.RangeView#getValueTypes~0:complex'
        description: ''
  - uid: 'ExcelScript!ExcelScript.RangeView#setFormulas:member(1)'
    summary: Stellt die Formel in der A1-Schreibweise dar.
    name: setFormulas(formulas)
    fullName: setFormulas(formulas)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormulas(formulas: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formulas
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setFormulasLocal:member(1)'
    summary: 'Stellt die Formel in der A1-Schreibweise, Sprache des Benutzers und im Gebietsschema der Zahlenformatierung dar. Beispielsweise würde die englische Formel "= SUM(A1, 1.5)" in Deutsch "= SUMME(A1; 1,5) " werden.'
    name: setFormulasLocal(formulasLocal)
    fullName: setFormulasLocal(formulasLocal)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormulasLocal(formulasLocal: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formulasLocal
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setFormulasR1C1:member(1)'
    summary: Stellt die Formel in der R1C1-Schreibweise dar.
    name: setFormulasR1C1(formulasR1C1)
    fullName: setFormulasR1C1(formulasR1C1)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormulasR1C1(formulasR1C1: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formulasR1C1
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setNumberFormat:member(1)'
    summary: Stellt den Excel-Zahlenformatcode für die angegebene Zelle dar.
    name: setNumberFormat(numberFormat)
    fullName: setNumberFormat(numberFormat)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNumberFormat(numberFormat: string[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: numberFormat
          description: ''
          type:
            - 'string[][]'
  - uid: 'ExcelScript!ExcelScript.RangeView#setValues:member(1)'
    summary: 'Stellt die Rohwerte der angegebenen Bereichsansicht dar. Die zurückgegebenen Daten können vom Typ Zeichenfolge, Zahl oder ein boolescher Wert sein. Zellen, die einen Fehler enthalten, geben die Fehlerzeichenfolge zurück.'
    name: setValues(values)
    fullName: setValues(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(values: (string | number | boolean)[][]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: ''
          type:
            - '(string | number | boolean)[][]'
references:
  - uid: 'ExcelScript!ExcelScript.Range:interface'
    name: Range
    fullName: ExcelScript.Range
  - uid: 'ExcelScript!ExcelScript.RangeView#getRows~0:complex'
    name: 'RangeView[]'
    fullName: 'ExcelScript.RangeView[]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.RangeView:interface'
        name: RangeView
        fullName: ExcelScript.RangeView
      - name: '[]'
        fullName: '[]'
  - uid: 'ExcelScript!ExcelScript.RangeView#getValueTypes~0:complex'
    name: 'RangeValueType[][]'
    fullName: 'ExcelScript.RangeValueType[][]'
    spec.typeScript:
      - uid: 'ExcelScript!ExcelScript.RangeValueType:enum'
        name: RangeValueType
        fullName: ExcelScript.RangeValueType
      - name: '[][]'
        fullName: '[][]'