### YamlMime:TSType
name: Excel.Setting
uid: excel!Excel.Setting:interface
package: excel!
fullName: Excel.Setting
summary: Setting stellt ein Schlüssel-Wert-Paar einer Einstellung dar, die im Dokument gespeichert ist (pro Datei pro Add-in). Diese benutzerdefinierten Schlüssel/Wert-Paare können zum Speichern von Status-oder Lebenszyklusinformationen verwendet werden, die vom Inhalts-oder Aufgabenbereich-Add-in benötigt werden. Beachten Sie, dass Einstellungen im Dokument gespeichert werden und daher keine vertraulichen oder geschützten Informationen wie Benutzerinformationen und Kennwort gespeichert werden können.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: key
  uid: excel!Excel.Setting#key:member
  package: excel!
  fullName: key
  summary: Der Schlüssel, der die ID der Einstellung darstellt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly key: string;'
    return:
      type: string
- name: value
  uid: excel!Excel.Setting#value:member
  package: excel!
  fullName: value
  summary: Stellt den Wert dar, der für diese Einstellung gespeichert ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'value: any;'
    return:
      type: any
methods:
- name: delete()
  uid: excel!Excel.Setting#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Löscht die Einstellung.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n}\n```"
- name: load(propertyNames)
  uid: excel!Excel.Setting#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 17ed929a92515909deef248b1e608997fc1e8153
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418611"
