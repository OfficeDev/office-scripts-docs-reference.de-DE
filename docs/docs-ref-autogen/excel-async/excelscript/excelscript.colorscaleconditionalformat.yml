### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ColorScaleConditionalFormat:interface'
    summary: Stellt ColorScale Kriterien für die bedingte Formatierung dar.
    name: Excel.ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ColorScaleConditionalFormat#criteria:member'
      - 'excel!Excel.ColorScaleConditionalFormat#load:member(1)'
      - 'excel!Excel.ColorScaleConditionalFormat#threeColorScale:member'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#criteria:member'
    summary: 'Die Kriterien der Farb Skala. Der Mittelpunkt ist optional, wenn eine zwei Punkt Farbskala verwendet wird.'
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: ConditionalColorScaleCriteria;'
      return:
        type:
          - 'excel!Excel.ConditionalColorScaleCriteria:interface'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B2:M5");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              let criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ColorScaleConditionalFormat#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen `context.sync()` vor dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ColorScaleConditionalFormat#threeColorScale:member'
    summary: 'Bei true wird die Farbskala mit drei Punkten (Minimum, Mittelpunkt, Maximum) verwendet, andernfalls hat Sie zwei (minimal, Maximum).'
    name: threeColorScale
    fullName: threeColorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly threeColorScale: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!Excel.ConditionalColorScaleCriteria:interface'
    name: ConditionalColorScaleCriteria
    fullName: Excel.ConditionalColorScaleCriteria