### YamlMime:TSType
name: Excel.ColorScaleConditionalFormat
uid: excel!Excel.ColorScaleConditionalFormat:interface
package: excel!
fullName: Excel.ColorScaleConditionalFormat
summary: Stellt ColorScale Kriterien für die bedingte Formatierung dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: criteria
  uid: excel!Excel.ColorScaleConditionalFormat#criteria:member
  package: excel!
  fullName: criteria
  summary: Die Kriterien der Farb Skala. Der Mittelpunkt ist optional, wenn eine zwei Punkt Farbskala verwendet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'criteria: ConditionalColorScaleCriteria;'
    return:
      type: <xref uid="excel!Excel.ConditionalColorScaleCriteria:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B2:M5\");\n    let conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    let criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n}\n```"
- name: threeColorScale
  uid: excel!Excel.ColorScaleConditionalFormat#threeColorScale:member
  package: excel!
  fullName: threeColorScale
  summary: Bei true wird die Farbskala mit drei Punkten (Minimum, Mittelpunkt, Maximum) verwendet, andernfalls hat Sie zwei (minimal, Maximum).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly threeColorScale: boolean;'
    return:
      type: boolean
methods:
- name: load(propertyNames)
  uid: excel!Excel.ColorScaleConditionalFormat#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: ff4f6d44e5d87d7408ccbe2eb5080b3aafd2bb05
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414712"
