### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalCellValueRule:interface'
    summary: Stellt eine bedingte Formatregel f√ºr Zellenwerte dar.
    name: Excel.ConditionalCellValueRule
    fullName: Excel.ConditionalCellValueRule
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalCellValueRule#formula1:member'
      - 'excel!Excel.ConditionalCellValueRule#formula2:member'
      - 'excel!Excel.ConditionalCellValueRule#operator:member'
  - uid: 'excel!Excel.ConditionalCellValueRule#formula1:member'
    summary: 'Die Formel, sofern erforderlich, nach der die bedingte Formatregel ausgewertet werden soll.'
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B21:E23");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.ConditionalCellValueRule#formula2:member'
    summary: 'Die Formel, sofern erforderlich, nach der die bedingte Formatregel ausgewertet werden soll.'
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalCellValueRule#operator:member'
    summary: Der Operator des bedingten Formats von Zellenwert.
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: ConditionalCellValueOperator;'
      return:
        type:
          - 'excel!Excel.ConditionalCellValueOperator:enum'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B21:E23");
              let conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          }
          ```
references:
  - uid: 'excel!Excel.ConditionalCellValueOperator:enum'
    name: ConditionalCellValueOperator
    fullName: Excel.ConditionalCellValueOperator