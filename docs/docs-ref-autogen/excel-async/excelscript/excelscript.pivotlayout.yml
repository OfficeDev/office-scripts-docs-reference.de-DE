### YamlMime:TSType
name: Excel.PivotLayout
uid: excel!Excel.PivotLayout:interface
package: excel!
fullName: Excel.PivotLayout
summary: Stellt das visuelle Layout der PivotTable dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: autoFormat
  uid: excel!Excel.PivotLayout#autoFormat:member
  package: excel!
  fullName: autoFormat
  summary: Gibt an, ob die Formatierung beim Aktualisieren oder beim Verschieben von Feldern automatisch formatiert wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autoFormat: boolean;'
    return:
      type: boolean
- name: enableFieldList
  uid: excel!Excel.PivotLayout#enableFieldList:member
  package: excel!
  fullName: enableFieldList
  summary: Gibt an, ob die Feldliste auf der Benutzeroberfläche angezeigt werden kann.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'enableFieldList: boolean;'
    return:
      type: boolean
- name: layoutType
  uid: excel!Excel.PivotLayout#layoutType:member
  package: excel!
  fullName: layoutType
  summary: Diese Eigenschaft gibt das PivotLayoutType-Objekt aller Felder in PivotTable an. Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'layoutType: PivotLayoutType | "Compact" | "Tabular" | "Outline";'
    return:
      type: <xref uid="excel!Excel.PivotLayoutType:enum" /> | "Compact" | "Tabular" | "Outline"
- name: preserveFormatting
  uid: excel!Excel.PivotLayout#preserveFormatting:member
  package: excel!
  fullName: preserveFormatting
  summary: Gibt an, ob die Formatierung beibehalten wird, wenn der Bericht durch Vorgänge wie Pivotieren, Sortieren oder Ändern von Seitenfeldelementen aktualisiert oder neu berechnet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'preserveFormatting: boolean;'
    return:
      type: boolean
- name: showColumnGrandTotals
  uid: excel!Excel.PivotLayout#showColumnGrandTotals:member
  package: excel!
  fullName: showColumnGrandTotals
  summary: Gibt an, ob der PivotTable-Bericht Gesamtergebnisse für Spalten anzeigt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showColumnGrandTotals: boolean;'
    return:
      type: boolean
- name: showRowGrandTotals
  uid: excel!Excel.PivotLayout#showRowGrandTotals:member
  package: excel!
  fullName: showRowGrandTotals
  summary: Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showRowGrandTotals: boolean;'
    return:
      type: boolean
- name: subtotalLocation
  uid: excel!Excel.PivotLayout#subtotalLocation:member
  package: excel!
  fullName: subtotalLocation
  summary: Diese Eigenschaft gibt das SubtotalLocationType-Objekt aller Felder in PivotTable an. Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'subtotalLocation: SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
    return:
      type: <xref uid="excel!Excel.SubtotalLocationType:enum" /> | "AtTop" | "AtBottom" | "Off"
methods:
- name: getColumnLabelRange()
  uid: excel!Excel.PivotLayout#getColumnLabelRange:member(1)
  package: excel!
  fullName: getColumnLabelRange()
  summary: Gibt den Bereich zurück, in dem sich die Spaltenbeschriftungen in PivotTable befinden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnLabelRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getDataBodyRange()
  uid: excel!Excel.PivotLayout#getDataBodyRange:member(1)
  package: excel!
  fullName: getDataBodyRange()
  summary: Gibt den Bereich zurück, in dem sich die Datenwerte in PivotTable befinden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataBodyRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // the layout controls the ranges used by the PivotTable\n    let range = pivotTable.layout.getDataBodyRange();\n\n    // get all the data hierarchy totals\n    let grandTotalRange = range.getLastRow();\n    grandTotalRange.load(\"address\");\n    await context.sync();\n    \n    // use the wholesale and farm sale totals to make a final sum\n    let masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange(\"B27:C27\");\n    masterTotalRange.formulas = [[\"All Crates\", \"=SUM(\" + grandTotalRange.address + \")\"]];\n    await context.sync();\n}\n```"
- name: getDataHierarchy(cell)
  uid: excel!Excel.PivotLayout#getDataHierarchy:member(1)
  package: excel!
  fullName: getDataHierarchy(cell)
  summary: Ruft die DataHierarchy ab, die zum Berechnen des Werts in einem angegebenen Bereich innerhalb der PivotTable verwendet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataHierarchy(cell: Range | string): DataPivotHierarchy;'
    parameters:
    - id: cell
      description: Eine einzelne Zelle innerhalb des PivotTable-Daten Texts.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.DataPivotHierarchy:interface" />
      description: ''
- name: getFilterAxisRange()
  uid: excel!Excel.PivotLayout#getFilterAxisRange:member(1)
  package: excel!
  fullName: getFilterAxisRange()
  summary: Gibt den Bereich des Filterbereichs von PivotTable zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFilterAxisRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getPivotItems(axis, cell)
  uid: excel!Excel.PivotLayout#getPivotItems:member(1)
  package: excel!
  fullName: getPivotItems(axis, cell)
  summary: Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getPivotItems(
                  axis: PivotAxis | "Unknown" | "Row" | "Column" | "Data" | "Filter",
                  cell: Range | string
              ): ClientResult<PivotItem[]>;
    parameters:
    - id: axis
      description: Die Achse, aus der das PivotItems abgerufen werden soll. Muss entweder "Row" oder "Column" lauten.
      type: <xref uid="excel!Excel.PivotAxis:enum" /> | "Unknown" | "Row" | "Column" | "Data" | "Filter"
    - id: cell
      description: Eine einzelne Zelle im Daten Textkörper der PivotTable.
      type: "<xref uid=\"excel!Excel.Range:interface\" /> | string\n        "
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;<xref uid="excel!Excel.PivotItem:interface" />[]&gt;
      description: ''
- name: getRange()
  uid: excel!Excel.PivotLayout#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: Gibt den Bereich an, in dem PivotTable vorhanden ist, mit Ausnahme des Filterbereichs.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRowLabelRange()
  uid: excel!Excel.PivotLayout#getRowLabelRange:member(1)
  package: excel!
  fullName: getRowLabelRange()
  summary: Gibt den Bereich zurück, in dem sich die Zeilenbeschriftungen in PivotTable befinden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowLabelRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PivotLayout#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
- name: setAutoSortOnCell(cell, sortBy)
  uid: excel!Excel.PivotLayout#setAutoSortOnCell:member(1)
  package: excel!
  fullName: setAutoSortOnCell(cell, sortBy)
  summary: Legt fest, dass die PivotTable automatisch nach der angegebenen Zelle sortiert, um automatisch alle notwendigen Kriterien und den Kontext auszuwählen. Dies verhält sich identisch wie das Anwenden eines Autosortes aus der Benutzeroberfläche.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      setAutoSortOnCell(
                  cell: Range | string,
                  sortBy: SortBy | "Ascending" | "Descending"
              ): void;
    parameters:
    - id: cell
      description: Eine einzelne zu verwendende Zelle Abrufen der Kriterien aus für die Anwendung der Auto Sortierung.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    - id: sortBy
      description: Die Richtung der Sortierung.
      type: "<xref uid=\"excel!Excel.SortBy:enum\" /> | \"Ascending\" | \"Descending\"\n        "
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: aa0eb682e5bc0691bb35f865194a501a8642645a
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49413321"
