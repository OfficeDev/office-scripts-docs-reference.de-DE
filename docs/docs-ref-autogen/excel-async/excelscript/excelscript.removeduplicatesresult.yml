### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RemoveDuplicatesResult:interface'
    summary: Stellt die Ergebnisse der RemoveDuplicates-Methode für den Bereich dar.
    name: Excel.RemoveDuplicatesResult
    fullName: Excel.RemoveDuplicatesResult
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
      - 'excel!Excel.RemoveDuplicatesResult#removed:member'
      - 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
  - uid: 'excel!Excel.RemoveDuplicatesResult#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen `context.sync()` vor dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RemoveDuplicatesResult#removed:member'
    summary: Die Anzahl der vom Vorgang entfernten doppelten Zeilen.
    name: removed
    fullName: removed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly removed: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RemoveDuplicatesResult#uniqueRemaining:member'
    summary: Die Anzahl der verbleibenden eindeutigen Zeilen im Ergebnisbereich.
    name: uniqueRemaining
    fullName: uniqueRemaining
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly uniqueRemaining: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let range = sheet.getRange("B2:D11");

              let deleteResult = range.removeDuplicates([0],true);    
              deleteResult.load();    
              await context.sync();

              console.log(deleteResult.removed + " entries with duplicate names removed.");
              console.log(deleteResult.uniqueRemaining + " entries with unique names remain in the range.");
          }
          ```