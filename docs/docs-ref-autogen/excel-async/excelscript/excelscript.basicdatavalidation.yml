### YamlMime:TSType
name: Excel.BasicDataValidation
uid: excel!Excel.BasicDataValidation:interface
package: excel!
fullName: Excel.BasicDataValidation
summary: Stellt die grundlegenden Typen Daten Überprüfungskriterien dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: formula1
  uid: excel!Excel.BasicDataValidation#formula1:member
  package: excel!
  fullName: formula1
  summary: 'Gibt den rechten Operanden an, wenn die Operator-Eigenschaft auf einen binären Operator wie GreaterThan festgelegt ist (der linke Operand ist der Wert, den der Benutzer in die Zelle eingeben möchte). Gibt mit den dreistelligen Operatoren zwischen und NotBetween den untergeordneten Operanden an. Wenn beispielsweise Formel 1 auf 10 und Operator auf GreaterThan festzulegen, bedeutet dies, dass gültige Daten für den Bereich größer als 10 sein müssen. Wenn Sie den Wert festlegen, kann er als Zahl, als Range-Objekt oder als Zeichenfolge Formel übergeben werden (wobei die Zeichenfolge entweder eine stringified-Zahl, ein Zellbezug wie "= a1" oder eine Formel wie "= min (a1, B1)" ist). Wenn der Wert abgerufen wird, wird er immer als Zeichenfolgenformel zurückgegeben, beispielsweise: "= 10", "= a1", "= Sum (a1: B5)" usw.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula1: string | number | Range;'
    return:
      type: string | number | <xref uid="excel!Excel.Range:interface" />
- name: formula2
  uid: excel!Excel.BasicDataValidation#formula2:member
  package: excel!
  fullName: formula2
  summary: 'Gibt mit den dreistelligen Operatoren zwischen und NotBetween den oberen gebundenen Operanden an. Wird nicht mit den binären Operatoren wie GreaterThan verwendet. Wenn Sie den Wert festlegen, kann er als Zahl, als Range-Objekt oder als Zeichenfolge Formel übergeben werden (wobei die Zeichenfolge entweder eine stringified-Zahl, ein Zellbezug wie "= a1" oder eine Formel wie "= min (a1, B1)" ist). Wenn der Wert abgerufen wird, wird er immer als Zeichenfolgenformel zurückgegeben, beispielsweise: "= 10", "= a1", "= Sum (a1: B5)" usw.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula2?: string | number | Range;'
    return:
      type: string | number | <xref uid="excel!Excel.Range:interface" />
- name: operator
  uid: excel!Excel.BasicDataValidation#operator:member
  package: excel!
  fullName: operator
  summary: Der Operator, der zum Überprüfen der Daten verwendet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      operator:
                  | DataValidationOperator
                  | "Between"
                  | "NotBetween"
                  | "EqualTo"
                  | "NotEqualTo"
                  | "GreaterThan"
                  | "LessThan"
                  | "GreaterThanOrEqualTo"
                  | "LessThanOrEqualTo";
    return:
      type: >-
        | <xref uid="excel!Excel.DataValidationOperator:enum" />
                    | "Between"
                    | "NotBetween"
                    | "EqualTo"
                    | "NotEqualTo"
                    | "GreaterThan"
                    | "LessThan"
                    | "GreaterThanOrEqualTo"
                    | "LessThanOrEqualTo"
metadata:
  ms.openlocfilehash: 50a8dbaa0970178d0bbe98b7b6df0853c8802970
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414475"
