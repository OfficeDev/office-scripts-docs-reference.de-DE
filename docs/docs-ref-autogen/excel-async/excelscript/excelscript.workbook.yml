### YamlMime:TSType
name: Excel.Workbook
uid: excel!Excel.Workbook:interface
package: excel!
fullName: Excel.Workbook
summary: Workbook ist das Objekt der obersten Ebene, das zugehörige Workbook-Objekte wie Arbeitsblätter, Tabellen, Bereiche usw. enthält. Weitere Informationen zum Workbook-Objektmodell finden Sie [unter Arbeiten mit Arbeitsmappen mithilfe der Excel-JavaScript-API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks) .<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: application
  uid: excel!Excel.Workbook#application:member
  package: excel!
  fullName: application
  summary: Stellt die Excel-Anwendungsinstanz dar, die diese Arbeitsmappe enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Application;'
    return:
      type: <xref uid="excel!Excel.Application:interface" />
- name: autoSave
  uid: excel!Excel.Workbook#autoSave:member
  package: excel!
  fullName: autoSave
  summary: Gibt an, ob sich die Arbeitsmappe im Autosave-Modus befindet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly autoSave: boolean;'
    return:
      type: boolean
- name: bindings
  uid: excel!Excel.Workbook#bindings:member
  package: excel!
  fullName: bindings
  summary: Stellt eine Auflistung aller Bindungen dar, die Teil der Arbeitsmappe sind.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly bindings: BindingCollection;'
    return:
      type: <xref uid="excel!Excel.BindingCollection:interface" />
- name: calculationEngineVersion
  uid: excel!Excel.Workbook#calculationEngineVersion:member
  package: excel!
  fullName: calculationEngineVersion
  summary: Gibt eine Nummer zur Version des Excel-Berechnungsmoduls zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type: number
- name: chartDataPointTrack
  uid: excel!Excel.Workbook#chartDataPointTrack:member
  package: excel!
  fullName: chartDataPointTrack
  summary: True, wenn alle Diagramme in der Arbeitsmappe die tatsächlichen Datenpunkte nachverfolgen, mit denen sie verbunden sind. False, wenn die Diagramme den Index der Datenpunkte nachverfolgen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartDataPointTrack: boolean;'
    return:
      type: boolean
- name: comments
  uid: excel!Excel.Workbook#comments:member
  package: excel!
  fullName: comments
  summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften Kommentare dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: CommentCollection;'
    return:
      type: <xref uid="excel!Excel.CommentCollection:interface" />
- name: customXmlParts
  uid: excel!Excel.Workbook#customXmlParts:member
  package: excel!
  fullName: customXmlParts
  summary: Stellt die Auflistung von benutzerdefinierten XML-Parts dar, die in dieser Arbeitsmappe enthalten sind.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly customXmlParts: CustomXmlPartCollection;'
    return:
      type: <xref uid="excel!Excel.CustomXmlPartCollection:interface" />
- name: dataConnections
  uid: excel!Excel.Workbook#dataConnections:member
  package: excel!
  fullName: dataConnections
  summary: Stellt alle Datenverbindungen in der Arbeitsmappe dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataConnections: DataConnectionCollection;'
    return:
      type: <xref uid="excel!Excel.DataConnectionCollection:interface" />
- name: isDirty
  uid: excel!Excel.Workbook#isDirty:member
  package: excel!
  fullName: isDirty
  summary: Gibt an, ob seit der letzten Speicherung der Arbeitsmappe Änderungen vorgenommen wurden. Sie können diese Eigenschaft auf true festlegen, wenn Sie eine geänderte Arbeitsmappe schließen möchten, ohne Sie zu speichern oder zum Speichern aufgefordert zu werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isDirty: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.Workbook#name:member
  package: excel!
  fullName: name
  summary: Ruft den Namen der Arbeitsmappe ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: names
  uid: excel!Excel.Workbook#names:member
  package: excel!
  fullName: names
  summary: Stellt eine Auflistung der benannten Elemente des Arbeitsmappenbereichs dar (benannte Bereiche und Konstanten).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly names: NamedItemCollection;'
    return:
      type: <xref uid="excel!Excel.NamedItemCollection:interface" />
- name: pivotTables
  uid: excel!Excel.Workbook#pivotTables:member
  package: excel!
  fullName: pivotTables
  summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften PivotTables dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTables: PivotTableCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableCollection:interface" />
- name: pivotTableStyles
  uid: excel!Excel.Workbook#pivotTableStyles:member
  package: excel!
  fullName: pivotTableStyles
  summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften PivotTableStyles dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTableStyles: PivotTableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableStyleCollection:interface" />
- name: previouslySaved
  uid: excel!Excel.Workbook#previouslySaved:member
  package: excel!
  fullName: previouslySaved
  summary: Gibt an, ob die Arbeitsmappe jemals lokal oder online gespeichert wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly previouslySaved: boolean;'
    return:
      type: boolean
- name: properties
  uid: excel!Excel.Workbook#properties:member
  package: excel!
  fullName: properties
  summary: Ruft die Arbeitsmappeneigenschaften ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly properties: DocumentProperties;'
    return:
      type: <xref uid="excel!Excel.DocumentProperties:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n}\n```"
- name: protection
  uid: excel!Excel.Workbook#protection:member
  package: excel!
  fullName: protection
  summary: Gibt das Protection-Objekt für eine Arbeitsmappe zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly protection: WorkbookProtection;'
    return:
      type: <xref uid="excel!Excel.WorkbookProtection:interface" />
- name: readOnly
  uid: excel!Excel.Workbook#readOnly:member
  package: excel!
  fullName: readOnly
  summary: True, wenn die Arbeitsmappe im schreibgeschützten Modus geöffnet ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type: boolean
- name: slicers
  uid: excel!Excel.Workbook#slicers:member
  package: excel!
  fullName: slicers
  summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften Datenschnitte dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicers: SlicerCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerCollection:interface" />
- name: slicerStyles
  uid: excel!Excel.Workbook#slicerStyles:member
  package: excel!
  fullName: slicerStyles
  summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften SlicerStyles dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerStyles: SlicerStyleCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:interface" />
- name: styles
  uid: excel!Excel.Workbook#styles:member
  package: excel!
  fullName: styles
  summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Formatvorlagen dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly styles: StyleCollection;'
    return:
      type: <xref uid="excel!Excel.StyleCollection:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n}\n```"
- name: tables
  uid: excel!Excel.Workbook#tables:member
  package: excel!
  fullName: tables
  summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Tabellen dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: TableCollection;'
    return:
      type: <xref uid="excel!Excel.TableCollection:interface" />
- name: tableStyles
  uid: excel!Excel.Workbook#tableStyles:member
  package: excel!
  fullName: tableStyles
  summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften TableStyles dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tableStyles: TableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TableStyleCollection:interface" />
- name: timelineStyles
  uid: excel!Excel.Workbook#timelineStyles:member
  package: excel!
  fullName: timelineStyles
  summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften TimelineStyles dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly timelineStyles: TimelineStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TimelineStyleCollection:interface" />
- name: usePrecisionAsDisplayed
  uid: excel!Excel.Workbook#usePrecisionAsDisplayed:member
  package: excel!
  fullName: usePrecisionAsDisplayed
  summary: True, wenn die Berechnungen in dieser Arbeitsmappe nur mit der Genauigkeit durchgeführt werden, mit der die Zahlen angezeigt werden. Daten verlieren dauerhaft die Genauigkeit, wenn diese Eigenschaft von false auf true umgeschaltet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'usePrecisionAsDisplayed: boolean;'
    return:
      type: boolean
- name: worksheets
  uid: excel!Excel.Workbook#worksheets:member
  package: excel!
  fullName: worksheets
  summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Arbeitsblätter dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheets: WorksheetCollection;'
    return:
      type: <xref uid="excel!Excel.WorksheetCollection:interface" />
methods:
- name: getActiveCell()
  uid: excel!Excel.Workbook#getActiveCell:member(1)
  package: excel!
  fullName: getActiveCell()
  summary: Ruft die derzeit aktive Zelle aus der Arbeitsmappe ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveCell(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n}\n```"
- name: getActiveChart()
  uid: excel!Excel.Workbook#getActiveChart:member(1)
  package: excel!
  fullName: getActiveChart()
  summary: Ruft das derzeit aktive Diagramm in der Arbeitsmappe ab. Wenn kein aktives Diagramm vorhanden ist, `ItemNotFound` wird eine Ausnahme ausgelöst.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChart(): Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:interface" />
      description: ''
- name: getActiveChartOrNullObject()
  uid: excel!Excel.Workbook#getActiveChartOrNullObject:member(1)
  package: excel!
  fullName: getActiveChartOrNullObject()
  summary: Ruft das derzeit aktive Diagramm in der Arbeitsmappe ab. Wenn kein aktives Diagramm vorhanden ist, wird ein NULL-Objekt zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChartOrNullObject(): Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:interface" />
      description: ''
- name: getActiveSlicer()
  uid: excel!Excel.Workbook#getActiveSlicer:member(1)
  package: excel!
  fullName: getActiveSlicer()
  summary: Ruft den derzeit aktiven Datenschnitt in der Arbeitsmappe ab. Wenn kein aktiver datenschnitt vorhanden ist, `ItemNotFound` wird eine Ausnahme ausgelöst.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicer(): Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: getActiveSlicerOrNullObject()
  uid: excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)
  package: excel!
  fullName: getActiveSlicerOrNullObject()
  summary: Ruft den derzeit aktiven Datenschnitt in der Arbeitsmappe ab. Wenn kein aktiver Datenschnitt vorhanden ist, wird ein Nullobjekt zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicerOrNullObject(): Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: getSelectedRange()
  uid: excel!Excel.Workbook#getSelectedRange:member(1)
  package: excel!
  fullName: getSelectedRange()
  summary: Ruft den aktuell ausgewählten einzelnen Bereich aus der Arbeitsmappe ab. Wenn mehrere Bereiche ausgewählt sind, wird durch diese Methode ein Fehler ausgelöst.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getSelectedRanges()
  uid: excel!Excel.Workbook#getSelectedRanges:member(1)
  package: excel!
  fullName: getSelectedRanges()
  summary: Ruft die aktuell ausgewählten Bereiche (einen oder mehrere) aus der Arbeitsmappe ab. Gibt im Gegensatz zu getSelectedRange() ein RangeAreas-Objekt zurück, das alle ausgewählten Bereiche darstellt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRanges(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n\n    let selectedRanges = context.workbook.getSelectedRanges();\n    selectedRanges.format.fill.color = \"lightblue\";\n\n    await context.sync();\n})\n```"
- name: load(propertyNames)
  uid: excel!Excel.Workbook#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 8163385dfac4e4ed347cdd90ca0a682dabffffe4
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49412636"
