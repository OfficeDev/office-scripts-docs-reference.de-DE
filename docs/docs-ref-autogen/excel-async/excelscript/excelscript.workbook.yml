### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Workbook:interface'
    summary: 'Workbook ist das Objekt der obersten Ebene, das zugehörige Workbook-Objekte wie Arbeitsblätter, Tabellen, Bereiche usw. enthält. Weitere Informationen zum Workbook-Objektmodell finden Sie [unter Arbeiten mit Arbeitsmappen mithilfe der Excel-JavaScript-API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks) .<!-- -->.'
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Workbook#application:member'
      - 'excel!Excel.Workbook#autoSave:member'
      - 'excel!Excel.Workbook#bindings:member'
      - 'excel!Excel.Workbook#calculationEngineVersion:member'
      - 'excel!Excel.Workbook#chartDataPointTrack:member'
      - 'excel!Excel.Workbook#comments:member'
      - 'excel!Excel.Workbook#customXmlParts:member'
      - 'excel!Excel.Workbook#dataConnections:member'
      - 'excel!Excel.Workbook#getActiveCell:member(1)'
      - 'excel!Excel.Workbook#getActiveChart:member(1)'
      - 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
      - 'excel!Excel.Workbook#getActiveSlicer:member(1)'
      - 'excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)'
      - 'excel!Excel.Workbook#getSelectedRange:member(1)'
      - 'excel!Excel.Workbook#getSelectedRanges:member(1)'
      - 'excel!Excel.Workbook#isDirty:member'
      - 'excel!Excel.Workbook#load:member(1)'
      - 'excel!Excel.Workbook#name:member'
      - 'excel!Excel.Workbook#names:member'
      - 'excel!Excel.Workbook#pivotTables:member'
      - 'excel!Excel.Workbook#pivotTableStyles:member'
      - 'excel!Excel.Workbook#previouslySaved:member'
      - 'excel!Excel.Workbook#properties:member'
      - 'excel!Excel.Workbook#protection:member'
      - 'excel!Excel.Workbook#readOnly:member'
      - 'excel!Excel.Workbook#slicers:member'
      - 'excel!Excel.Workbook#slicerStyles:member'
      - 'excel!Excel.Workbook#styles:member'
      - 'excel!Excel.Workbook#tables:member'
      - 'excel!Excel.Workbook#tableStyles:member'
      - 'excel!Excel.Workbook#timelineStyles:member'
      - 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
      - 'excel!Excel.Workbook#worksheets:member'
  - uid: 'excel!Excel.Workbook#application:member'
    summary: 'Stellt die Excel-Anwendungsinstanz dar, die diese Arbeitsmappe enthält.'
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Application;'
      return:
        type:
          - 'excel!Excel.Application:interface'
  - uid: 'excel!Excel.Workbook#autoSave:member'
    summary: 'Gibt an, ob sich die Arbeitsmappe im Autosave-Modus befindet.'
    name: autoSave
    fullName: autoSave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoSave: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#bindings:member'
    summary: 'Stellt eine Auflistung aller Bindungen dar, die Teil der Arbeitsmappe sind.'
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:interface'
  - uid: 'excel!Excel.Workbook#calculationEngineVersion:member'
    summary: Gibt eine Nummer zur Version des Excel-Berechnungsmoduls zurück.
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Workbook#chartDataPointTrack:member'
    summary: 'True, wenn alle Diagramme in der Arbeitsmappe die tatsächlichen Datenpunkte nachverfolgen, mit denen sie verbunden sind. False, wenn die Diagramme den Index der Datenpunkte nachverfolgen.'
    name: chartDataPointTrack
    fullName: chartDataPointTrack
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartDataPointTrack: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#comments:member'
    summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften Kommentare dar.
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:interface'
  - uid: 'excel!Excel.Workbook#customXmlParts:member'
    summary: 'Stellt die Auflistung von benutzerdefinierten XML-Parts dar, die in dieser Arbeitsmappe enthalten sind.'
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: CustomXmlPartCollection;'
      return:
        type:
          - 'excel!Excel.CustomXmlPartCollection:interface'
  - uid: 'excel!Excel.Workbook#dataConnections:member'
    summary: Stellt alle Datenverbindungen in der Arbeitsmappe dar.
    name: dataConnections
    fullName: dataConnections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataConnections: DataConnectionCollection;'
      return:
        type:
          - 'excel!Excel.DataConnectionCollection:interface'
  - uid: 'excel!Excel.Workbook#getActiveCell:member(1)'
    summary: Ruft die derzeit aktive Zelle aus der Arbeitsmappe ab.
    name: getActiveCell()
    fullName: getActiveCell()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveCell(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {

              let myWorkbook = context.workbook;
              let activeCell = myWorkbook.getActiveCell();
              activeCell.load("address");

              await context.sync();
              
              console.log("The active cell is " + activeCell.address);
          }
          ```
  - uid: 'excel!Excel.Workbook#getActiveChart:member(1)'
    summary: 'Ruft das derzeit aktive Diagramm in der Arbeitsmappe ab. Wenn kein aktives Diagramm vorhanden ist, `ItemNotFound` wird eine Ausnahme ausgelöst.'
    name: getActiveChart()
    fullName: getActiveChart()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChart(): Chart;'
      return:
        type:
          - 'excel!Excel.Chart:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
    summary: 'Ruft das derzeit aktive Diagramm in der Arbeitsmappe ab. Wenn kein aktives Diagramm vorhanden ist, wird ein NULL-Objekt zurückgegeben.'
    name: getActiveChartOrNullObject()
    fullName: getActiveChartOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChartOrNullObject(): Chart;'
      return:
        type:
          - 'excel!Excel.Chart:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveSlicer:member(1)'
    summary: 'Ruft den derzeit aktiven Datenschnitt in der Arbeitsmappe ab. Wenn kein aktiver datenschnitt vorhanden ist, `ItemNotFound` wird eine Ausnahme ausgelöst.'
    name: getActiveSlicer()
    fullName: getActiveSlicer()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSlicer(): Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)'
    summary: 'Ruft den derzeit aktiven Datenschnitt in der Arbeitsmappe ab. Wenn kein aktiver Datenschnitt vorhanden ist, wird ein Nullobjekt zurückgegeben.'
    name: getActiveSlicerOrNullObject()
    fullName: getActiveSlicerOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSlicerOrNullObject(): Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#getSelectedRange:member(1)'
    summary: 'Ruft den aktuell ausgewählten einzelnen Bereich aus der Arbeitsmappe ab. Wenn mehrere Bereiche ausgewählt sind, wird durch diese Methode ein Fehler ausgelöst.'
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#getSelectedRanges:member(1)'
    summary: 'Ruft die aktuell ausgewählten Bereiche (einen oder mehrere) aus der Arbeitsmappe ab. Gibt im Gegensatz zu getSelectedRange() ein RangeAreas-Objekt zurück, das alle ausgewählten Bereiche darstellt.'
    name: getSelectedRanges()
    fullName: getSelectedRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRanges(): RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:interface'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {

              let selectedRanges = context.workbook.getSelectedRanges();
              selectedRanges.format.fill.color = "lightblue";

              await context.sync();
          })
          ```
  - uid: 'excel!Excel.Workbook#isDirty:member'
    summary: 'Gibt an, ob seit der letzten Speicherung der Arbeitsmappe Änderungen vorgenommen wurden. Sie können diese Eigenschaft auf true festlegen, wenn Sie eine geänderte Arbeitsmappe schließen möchten, ohne Sie zu speichern oder zum Speichern aufgefordert zu werden.'
    name: isDirty
    fullName: isDirty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDirty: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen `context.sync()` vor dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Workbook#name:member'
    summary: Ruft den Namen der Arbeitsmappe ab.
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Workbook#names:member'
    summary: Stellt eine Auflistung der benannten Elemente des Arbeitsmappenbereichs dar (benannte Bereiche und Konstanten).
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:interface'
  - uid: 'excel!Excel.Workbook#pivotTables:member'
    summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften PivotTables dar.
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:interface'
  - uid: 'excel!Excel.Workbook#pivotTableStyles:member'
    summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften PivotTableStyles dar.
    name: pivotTableStyles
    fullName: pivotTableStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTableStyles: PivotTableStyleCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableStyleCollection:interface'
  - uid: 'excel!Excel.Workbook#previouslySaved:member'
    summary: 'Gibt an, ob die Arbeitsmappe jemals lokal oder online gespeichert wurde.'
    name: previouslySaved
    fullName: previouslySaved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly previouslySaved: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#properties:member'
    summary: Ruft die Arbeitsmappeneigenschaften ab.
    name: properties
    fullName: properties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly properties: DocumentProperties;'
      return:
        type:
          - 'excel!Excel.DocumentProperties:interface'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let titleValue = "Excel document properties API";
              let subjectValue = "Set and get document properties";
              let keywordsValue = "Set and get operations";
              let commentsValue = "This is an Excel document properties API code sample";
              let categoryValue = "Office Add-ins";
              let managerValue = "John";
              let companyValue = "Microsoft";

              let docProperties = context.workbook.properties;

              // Set the writeable document properties.
              docProperties.title = titleValue;
              docProperties.subject = subjectValue;
              docProperties.keywords = keywordsValue;
              docProperties.comments = commentsValue;
              docProperties.category = categoryValue;
              docProperties.manager = managerValue;
              docProperties.company = companyValue;

              await context.sync();

              console.log("Set the following document properties: title, subject, keywords, comments, category, manager, company.");
          }
          ```
  - uid: 'excel!Excel.Workbook#protection:member'
    summary: Gibt das Protection-Objekt für eine Arbeitsmappe zurück.
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:interface'
  - uid: 'excel!Excel.Workbook#readOnly:member'
    summary: 'True, wenn die Arbeitsmappe im schreibgeschützten Modus geöffnet ist.'
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly readOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#slicers:member'
    summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften Datenschnitte dar.
    name: slicers
    fullName: slicers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicers: SlicerCollection;'
      return:
        type:
          - 'excel!Excel.SlicerCollection:interface'
  - uid: 'excel!Excel.Workbook#slicerStyles:member'
    summary: Stellt eine Sammlung der mit der Arbeitsmappe verknüpften SlicerStyles dar.
    name: slicerStyles
    fullName: slicerStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerStyles: SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:interface'
  - uid: 'excel!Excel.Workbook#styles:member'
    summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Formatvorlagen dar.
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly styles: StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:interface'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          async function main(context: Excel.RequestContext) {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          }
          ```
  - uid: 'excel!Excel.Workbook#tables:member'
    summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Tabellen dar.
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:interface'
  - uid: 'excel!Excel.Workbook#tableStyles:member'
    summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften TableStyles dar.
    name: tableStyles
    fullName: tableStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableStyles: TableStyleCollection;'
      return:
        type:
          - 'excel!Excel.TableStyleCollection:interface'
  - uid: 'excel!Excel.Workbook#timelineStyles:member'
    summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften TimelineStyles dar.
    name: timelineStyles
    fullName: timelineStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly timelineStyles: TimelineStyleCollection;'
      return:
        type:
          - 'excel!Excel.TimelineStyleCollection:interface'
  - uid: 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
    summary: 'True, wenn die Berechnungen in dieser Arbeitsmappe nur mit der Genauigkeit durchgeführt werden, mit der die Zahlen angezeigt werden. Daten verlieren dauerhaft die Genauigkeit, wenn diese Eigenschaft von false auf true umgeschaltet wird.'
    name: usePrecisionAsDisplayed
    fullName: usePrecisionAsDisplayed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'usePrecisionAsDisplayed: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#worksheets:member'
    summary: Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Arbeitsblätter dar.
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:interface'
references:
  - uid: 'excel!Excel.Application:interface'
    name: Application
    fullName: Excel.Application
  - uid: 'excel!Excel.BindingCollection:interface'
    name: BindingCollection
    fullName: Excel.BindingCollection
  - uid: 'excel!Excel.CommentCollection:interface'
    name: CommentCollection
    fullName: Excel.CommentCollection
  - uid: 'excel!Excel.CustomXmlPartCollection:interface'
    name: CustomXmlPartCollection
    fullName: Excel.CustomXmlPartCollection
  - uid: 'excel!Excel.DataConnectionCollection:interface'
    name: DataConnectionCollection
    fullName: Excel.DataConnectionCollection
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.Chart:interface'
    name: Chart
    fullName: Excel.Chart
  - uid: 'excel!Excel.Slicer:interface'
    name: Slicer
    fullName: Excel.Slicer
  - uid: 'excel!Excel.RangeAreas:interface'
    name: RangeAreas
    fullName: Excel.RangeAreas
  - uid: 'excel!Excel.NamedItemCollection:interface'
    name: NamedItemCollection
    fullName: Excel.NamedItemCollection
  - uid: 'excel!Excel.PivotTableCollection:interface'
    name: PivotTableCollection
    fullName: Excel.PivotTableCollection
  - uid: 'excel!Excel.PivotTableStyleCollection:interface'
    name: PivotTableStyleCollection
    fullName: Excel.PivotTableStyleCollection
  - uid: 'excel!Excel.DocumentProperties:interface'
    name: DocumentProperties
    fullName: Excel.DocumentProperties
  - uid: 'excel!Excel.WorkbookProtection:interface'
    name: WorkbookProtection
    fullName: Excel.WorkbookProtection
  - uid: 'excel!Excel.SlicerCollection:interface'
    name: SlicerCollection
    fullName: Excel.SlicerCollection
  - uid: 'excel!Excel.SlicerStyleCollection:interface'
    name: SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
  - uid: 'excel!Excel.StyleCollection:interface'
    name: StyleCollection
    fullName: Excel.StyleCollection
  - uid: 'excel!Excel.TableCollection:interface'
    name: TableCollection
    fullName: Excel.TableCollection
  - uid: 'excel!Excel.TableStyleCollection:interface'
    name: TableStyleCollection
    fullName: Excel.TableStyleCollection
  - uid: 'excel!Excel.TimelineStyleCollection:interface'
    name: TimelineStyleCollection
    fullName: Excel.TimelineStyleCollection
  - uid: 'excel!Excel.WorksheetCollection:interface'
    name: WorksheetCollection
    fullName: Excel.WorksheetCollection