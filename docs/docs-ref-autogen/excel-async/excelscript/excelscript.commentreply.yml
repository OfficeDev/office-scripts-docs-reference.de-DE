### YamlMime:TSType
name: Excel.CommentReply
uid: excel!Excel.CommentReply:interface
package: excel!
fullName: Excel.CommentReply
summary: Stellt eine Kommentar Antwort in der Arbeitsmappe dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: authorEmail
  uid: excel!Excel.CommentReply#authorEmail:member
  package: excel!
  fullName: authorEmail
  summary: Ruft die E-Mail des Autors der Kommentarantwort ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorEmail: string;'
    return:
      type: string
- name: authorName
  uid: excel!Excel.CommentReply#authorName:member
  package: excel!
  fullName: authorName
  summary: Ruft den Namen des Autors der Kommentarantwort ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorName: string;'
    return:
      type: string
- name: content
  uid: excel!Excel.CommentReply#content:member
  package: excel!
  fullName: content
  summary: Der Inhalt der Kommentar Antwort. Die Zeichenfolge ist nur-Text.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'content: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n    let comment = sheet.comments.getItemAt(0);\n    let reply = comment.replies.getItemAt(0);\n    reply.load(\"content\");\n    // Sync to load the content of the comment reply.\n    await context.sync();\n\n    // Append \"Please!\" to the end of the comment reply.\n    reply.content += \" Please!\";\n    await context.sync();\n}\n```"
- name: creationDate
  uid: excel!Excel.CommentReply#creationDate:member
  package: excel!
  fullName: creationDate
  summary: Ruft den Erstellungszeitpunkt der Kommentarantwort ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly creationDate: Date;'
    return:
      type: Date
- name: id
  uid: excel!Excel.CommentReply#id:member
  package: excel!
  fullName: id
  summary: Gibt den Kommentar Antwort Bezeichner an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: mentions
  uid: excel!Excel.CommentReply#mentions:member
  package: excel!
  fullName: mentions
  summary: Die in Kommentaren erwähnten Entitäten (beispielsweise Personen).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly mentions: CommentMention[];'
    return:
      type: <xref uid="excel!Excel.CommentMention:interface" />[]
- name: resolved
  uid: excel!Excel.CommentReply#resolved:member
  package: excel!
  fullName: resolved
  summary: Der Kommentar Antwortstatus. Der Wert "true" bedeutet, dass die Antwort den Zustand "aufgelöst" aufweist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly resolved: boolean;'
    return:
      type: boolean
- name: richContent
  uid: excel!Excel.CommentReply#richContent:member
  package: excel!
  fullName: richContent
  summary: Der umfangreiche Kommentar Inhalt (beispielsweise Erwähnungen in Kommentaren). Diese Zeichenfolge soll Endbenutzern nicht angezeigt werden. Das Add-in sollte nur dazu verwendet werden, um umfangreiche Kommentar Inhalte zu analysieren.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richContent: string;'
    return:
      type: string
methods:
- name: delete()
  uid: excel!Excel.CommentReply#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Löscht die Kommentarantwort.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    // Remove the first comment reply from this worksheet's first comment.\n    let sheet = context.workbook.worksheets.getItem(\"Comments\");\n    let comment = sheet.comments.getItemAt(0);\n    comment.replies.getItemAt(0).delete();\n    await context.sync();\n}\n```"
- name: getLocation()
  uid: excel!Excel.CommentReply#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: Ruft die Zelle ab, in der sich diese Kommentar Antwort befindet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getParentComment()
  uid: excel!Excel.CommentReply#getParentComment:member(1)
  package: excel!
  fullName: getParentComment()
  summary: Ruft den übergeordneten Kommentar dieser Antwort ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParentComment(): Comment;'
    return:
      type: <xref uid="excel!Excel.Comment:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CommentReply#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
- name: updateMentions(contentWithMentions)
  uid: excel!Excel.CommentReply#updateMentions:member(1)
  package: excel!
  fullName: updateMentions(contentWithMentions)
  summary: Aktualisiert den Kommentar Inhalt mit einer speziell formatierten Zeichenfolge und einer Liste von Erwähnungen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'updateMentions(contentWithMentions: CommentRichContent): void;'
    parameters:
    - id: contentWithMentions
      description: Der Inhalt des Kommentars. Dies enthält eine speziell formatierte Zeichenfolge und eine Liste von Erwähnungen, die in der Zeichenfolge analysiert werden, wenn Sie von Excel angezeigt werden.
      type: <xref uid="excel!Excel.CommentRichContent:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: bf48e6926ecd58e7f38fb938eb6eedf511618c1f
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414733"
