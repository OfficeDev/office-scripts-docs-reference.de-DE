### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeView:interface'
    summary: RangeView stellt einen Satz von sichtbaren Zellen des übergeordneten Bereichs dar.
    name: Excel.RangeView
    fullName: Excel.RangeView
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.RangeView#cellAddresses:member'
      - 'excel!Excel.RangeView#columnCount:member'
      - 'excel!Excel.RangeView#formulas:member'
      - 'excel!Excel.RangeView#formulasLocal:member'
      - 'excel!Excel.RangeView#formulasR1C1:member'
      - 'excel!Excel.RangeView#getRange:member(1)'
      - 'excel!Excel.RangeView#index:member'
      - 'excel!Excel.RangeView#load:member(1)'
      - 'excel!Excel.RangeView#numberFormat:member'
      - 'excel!Excel.RangeView#rowCount:member'
      - 'excel!Excel.RangeView#rows:member'
      - 'excel!Excel.RangeView#text:member'
      - 'excel!Excel.RangeView#values:member'
      - 'excel!Excel.RangeView#valueTypes:member'
  - uid: 'excel!Excel.RangeView#cellAddresses:member'
    summary: Stellt die Zelladressen des RangeView dar.
    name: cellAddresses
    fullName: cellAddresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellAddresses: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#columnCount:member'
    summary: Die Anzahl der sichtbaren Spalten.
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeView#formulas:member'
    summary: Stellt die Formel in der A1-Schreibweise dar.
    name: formulas
    fullName: formulas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulas: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#formulasLocal:member'
    summary: 'Stellt die Formel in der A1-Schreibweise, Sprache des Benutzers und im Gebietsschema der Zahlenformatierung dar. Beispielsweise würde die englische Formel "= SUM(A1, 1.5)" in Deutsch "= SUMME(A1; 1,5) " werden.'
    name: formulasLocal
    fullName: formulasLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasLocal: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#formulasR1C1:member'
    summary: Stellt die Formel in der R1C1-Schreibweise dar.
    name: formulasR1C1
    fullName: formulasR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasR1C1: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#getRange:member(1)'
    summary: Ruft den übergeordneten Bereich zum aktuellen RangeView ab.
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Range;'
      return:
        type:
          - 'excel!Excel.Range:interface'
        description: ''
  - uid: 'excel!Excel.RangeView#index:member'
    summary: 'Gibt einen Wert zurück, der den Index des RangeView darstellt.'
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeView#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen `context.sync()` vor dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeView#numberFormat:member'
    summary: Stellt den Excel-Zahlenformatcode für die angegebene Zelle dar.
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#rowCount:member'
    summary: Die Anzahl der sichtbaren Zeilen.
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeView#rows:member'
    summary: Stellt eine Sammlung der mit dem Bereich verknüpften Bereichsansichten dar.
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: RangeViewCollection;'
      return:
        type:
          - 'excel!Excel.RangeViewCollection:interface'
  - uid: 'excel!Excel.RangeView#text:member'
    summary: 'Textwerte des angegebenen Bereichs. Der Textwert hängt nicht von der Zellenbreite ab. Die \# Zeichenersetzung, die in der Excel-Benutzeroberfläche geschieht, wirkt sich nicht auf den von der API zurückgegebenen Textwert aus.'
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string[][];'
      return:
        type:
          - 'string[][]'
  - uid: 'excel!Excel.RangeView#values:member'
    summary: 'Stellt die Rohwerte der angegebenen Bereichsansicht dar. Die zurückgegebenen Daten können vom Typ Zeichenfolge, Zahl oder ein boolescher Wert sein. Zellen, die einen Fehler enthalten, geben die Fehlerzeichenfolge zurück.'
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: 'excel!Excel.RangeView#valueTypes:member'
    summary: Stellt den Datentyp in jeder Zelle dar.
    name: valueTypes
    fullName: valueTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly valueTypes: RangeValueType[][];'
      return:
        type:
          - 'excel!Excel.RangeView#valueTypes~0:complex'
references:
  - uid: 'excel!Excel.Range:interface'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.RangeViewCollection:interface'
    name: RangeViewCollection
    fullName: Excel.RangeViewCollection
  - uid: 'excel!Excel.RangeView#valueTypes~0:complex'
    name: 'RangeValueType[][]'
    fullName: 'Excel.RangeValueType[][]'
    spec.typeScript:
      - uid: 'excel!Excel.RangeValueType:enum'
        name: RangeValueType
        fullName: Excel.RangeValueType
      - name: '[][]'
        fullName: '[][]'