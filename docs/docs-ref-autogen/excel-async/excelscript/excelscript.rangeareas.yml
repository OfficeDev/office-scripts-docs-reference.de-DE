### YamlMime:TSType
name: Excel.RangeAreas
uid: excel!Excel.RangeAreas:interface
package: excel!
fullName: Excel.RangeAreas
summary: RangeAreas stellt eine Auflistung von einem oder mehreren rechteckigen Bereichen im gleichen Arbeitsblatt dar. Informationen zur Verwendung von discontinguous-Bereichen finden Sie unter [Arbeiten mit mehreren Bereichen gleichzeitig in Excel-Add-ins](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges) .<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: address
  uid: excel!Excel.RangeAreas#address:member
  package: excel!
  fullName: address
  summary: 'Gibt den RangeAreas-Verweis im a1-Format zurück. Der Adresswert enthält den Namen des Arbeitsblatts für jeden rechteckigen Block von Zellen (beispielsweise "Sheet1! A1: B4, Sheet1! D1: D4 ").'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly address: string;'
    return:
      type: string
- name: addressLocal
  uid: excel!Excel.RangeAreas#addressLocal:member
  package: excel!
  fullName: addressLocal
  summary: Gibt den RangeAreas-Verweis im Benutzergebietsschema zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type: string
- name: areaCount
  uid: excel!Excel.RangeAreas#areaCount:member
  package: excel!
  fullName: areaCount
  summary: Gibt die Anzahl der rechteckigen Bereiche zurück, die dieses RangeAreas-Objekt bilden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areaCount: number;'
    return:
      type: number
- name: areas
  uid: excel!Excel.RangeAreas#areas:member
  package: excel!
  fullName: areas
  summary: Gibt eine Sammlung der rechteckigen Bereiche zurück, die dieses RangeAreas-Objekt bilden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areas: RangeCollection;'
    return:
      type: <xref uid="excel!Excel.RangeCollection:interface" />
- name: cellCount
  uid: excel!Excel.RangeAreas#cellCount:member
  package: excel!
  fullName: cellCount
  summary: Gibt die Anzahl der Zellen in RangeAreas-Objekt zurück und addiert dabei die Zellanzahl aller rechteckigen Einzelbereiche. Gibt -1 zurück, wenn die Zellanzahl 2^31-1 (2,147,483,647) überschreitet.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type: number
- name: conditionalFormats
  uid: excel!Excel.RangeAreas#conditionalFormats:member
  package: excel!
  fullName: conditionalFormats
  summary: Gibt eine Sammlung von ConditionalFormats zurück, die sich mit Zellen in diesem RangeAreas-Objekt überschneiden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly conditionalFormats: ConditionalFormatCollection;'
    return:
      type: <xref uid="excel!Excel.ConditionalFormatCollection:interface" />
- name: dataValidation
  uid: excel!Excel.RangeAreas#dataValidation:member
  package: excel!
  fullName: dataValidation
  summary: Gibt ein dataValidation-Objekt für alle Bereiche im RangeAreas zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataValidation: DataValidation;'
    return:
      type: <xref uid="excel!Excel.DataValidation:interface" />
- name: format
  uid: excel!Excel.RangeAreas#format:member
  package: excel!
  fullName: format
  summary: Gibt ein RangeFormat-Objekt zurück, das die Schriftart, die Füllung, die Rahmen, die Ausrichtung und andere Eigenschaften für alle Bereiche im RangeAreas-Objekt kapselt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: RangeFormat;'
    return:
      type: <xref uid="excel!Excel.RangeFormat:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    let usedRange = sheet.getUsedRange();\n\n    // Find the ranges with formulas.\n    let formulaRanges = usedRange.getSpecialCells(\"Formulas\");\n    formulaRanges.format.fill.color = \"lightgreen\";\n\n    await context.sync();\n}\n```"
- name: isEntireColumn
  uid: excel!Excel.RangeAreas#isEntireColumn:member
  package: excel!
  fullName: isEntireColumn
  summary: Gibt an, ob alle Bereiche in diesem RangeAreas-Objekt ganze Spalten darstellen (beispielsweise "A:C, Q:Z").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type: boolean
- name: isEntireRow
  uid: excel!Excel.RangeAreas#isEntireRow:member
  package: excel!
  fullName: isEntireRow
  summary: Gibt an, ob alle Bereiche in diesem RangeAreas-Objekt ganze Zeilen darstellen (beispielsweise "1:3, 5:7").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type: boolean
- name: style
  uid: excel!Excel.RangeAreas#style:member
  package: excel!
  fullName: style
  summary: Stellt die Formatvorlage für alle Bereiche in diesem RangeAreas-Objekt dar. Wenn die Formatvorlagen der Zellen inkonsistent sind, wird NULL zurückgegeben. Für benutzerdefinierte Formatvorlagen wird der Name der Formatvorlage zurückgegeben. Für integrierte Formatvorlagen wird eine Zeichenfolge zurückgegeben, die einen Wert in der Builtin-Enumeration darstellt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: worksheet
  uid: excel!Excel.RangeAreas#worksheet:member
  package: excel!
  fullName: worksheet
  summary: Gibt das Arbeitsblatt für das aktuelle RangeAreas zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: calculate()
  uid: excel!Excel.RangeAreas#calculate:member(1)
  package: excel!
  fullName: calculate()
  summary: Berechnet alle Zellen in RangeAreas.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: excel!Excel.RangeAreas#clear:member(1)
  package: excel!
  fullName: clear(applyTo)
  summary: Löscht Werte, Format, Füllung, Rahmen usw. in jedem der Bereiche, die dieses RangeAreas-Objekt bilden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      clear(
                  applyTo?:
                      | ClearApplyTo
                      | "All"
                      | "Formats"
                      | "Contents"
                      | "Hyperlinks"
                      | "RemoveHyperlinks"
              ): void;
    parameters:
    - id: applyTo
      description: Optional. Bestimmt den Typ der Löschaktion. Weitere Informationen finden Sie unter Excel. ClearApplyTo. Der Standardwert ist "All".
      type: "| <xref uid=\"excel!Excel.ClearApplyTo:enum\" />\n                | \"All\"\n                | \"Formats\"\n                | \"Contents\"\n                | \"Hyperlinks\"\n                | \"RemoveHyperlinks\"\n        "
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: excel!Excel.RangeAreas#convertDataTypeToText:member(1)
  package: excel!
  fullName: convertDataTypeToText()
  summary: Konvertiert alle Zellen in RangeAreas mit Datentypen in Text.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: convertToLinkedDataType(serviceID, languageCulture)
  uid: excel!Excel.RangeAreas#convertToLinkedDataType:member(1)
  package: excel!
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  summary: Konvertiert alle Zellen in RangeAreas in den verknüpften Datentyp.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      convertToLinkedDataType(
                  serviceID: number,
                  languageCulture: string
              ): void;
    parameters:
    - id: serviceID
      description: Die Dienst-ID, die zum Abfragen der Daten verwendet wird.
      type: number
    - id: languageCulture
      description: Sprach Kultur, für die der Dienst abgefragt werden soll.
      type: string
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: excel!Excel.RangeAreas#copyFrom:member(1)
  package: excel!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: Kopiert Daten oder Formatierung von Zellen aus dem Quellbereich oder RangeAreas in das aktuelle RangeAreas-Objekt. Das Ziel-rangeAreas kann eine andere Größe als der Quellbereich oder rangeAreas sein. Das Ziel wird automatisch erweitert, wenn es kleiner als die Quelle ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      copyFrom(
                  sourceRange: Range | RangeAreas | string,
                  copyType?:
                      | RangeCopyType
                      | "All"
                      | "Formulas"
                      | "Values"
                      | "Formats",
                  skipBlanks?: boolean,
                  transpose?: boolean
              ): void;
    parameters:
    - id: sourceRange
      description: Der Quellbereich oder RangeAreas, aus dem kopiert werden soll. Wenn die Quell-RangeAreas mehrere Bereiche aufweist, muss Ihr Formular in der Lage sein, durch Entfernen ganzer Zeilen oder Spalten aus einem rechteckigen Bereich erstellt zu werden.
      type: <xref uid="excel!Excel.Range:interface" /> | <xref uid="excel!Excel.RangeAreas:interface" /> | string
    - id: copyType
      description: Der Typ der zu kopierende Zellendaten oder-Formatierung. Der Standardwert ist "All".
      type: >-
        | <xref uid="excel!Excel.RangeCopyType:enum" />
                        | "All"
                        | "Formulas"
                        | "Values"
                        | "Formats"
    - id: skipBlanks
      description: True, wenn leere Zellen im Quellbereich oder RangeAreas übersprungen werden sollen. Der Standardwert ist „false“.
      type: boolean
    - id: transpose
      description: True, wenn die Zellen im Ziel RangeAreas transponieren. Der Standardwert ist „false“.
      type: boolean
    return:
      type: void
      description: ''
- name: getEntireColumn()
  uid: excel!Excel.RangeAreas#getEntireColumn:member(1)
  package: excel!
  fullName: getEntireColumn()
  summary: Gibt ein RangeAreas-Objekt zurück, das die gesamten Spalten von RangeAreas darstellt (wenn beispielsweise das aktuelle RangeAreas die Zellen "B4:E11, H2" darstellt, wird ein RangeAreas-Objekt zurückgegeben, das die Spalten "B:E, H:H" darstellt).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getEntireRow()
  uid: excel!Excel.RangeAreas#getEntireRow:member(1)
  package: excel!
  fullName: getEntireRow()
  summary: Gibt ein RangeAreas-Objekt zurück, das die gesamten Zeilen von RangeAreas darstellt (wenn beispielsweise das aktuelle RangeAreas die Zellen "B4:E11" darstellt, wird ein RangeAreas-Objekt zurückgegeben, das die Zeilen "4:11" darstellt).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getIntersection(anotherRange)
  uid: excel!Excel.RangeAreas#getIntersection:member(1)
  package: excel!
  fullName: getIntersection(anotherRange)
  summary: Gibt das RangeAreas-Objekt zurück, das die Schnittmenge der angegebenen Bereiche oder RangeAreas darstellt. Wenn keine Schnittmenge gefunden wird, wird ein ItemNotFound-Fehler ausgelöst.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | RangeAreas | string): RangeAreas;'
    parameters:
    - id: anotherRange
      description: Der Bereich, das RangeAreas-Objekt oder die Bereichsadresse, die zum Bestimmen der Schnittmenge verwendet wird.
      type: <xref uid="excel!Excel.Range:interface" /> | <xref uid="excel!Excel.RangeAreas:interface" /> | string
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getIntersectionOrNullObject(anotherRange)
  uid: excel!Excel.RangeAreas#getIntersectionOrNullObject:member(1)
  package: excel!
  fullName: getIntersectionOrNullObject(anotherRange)
  summary: Gibt das RangeAreas-Objekt zurück, das die Schnittmenge der angegebenen Bereiche oder RangeAreas darstellt. Wenn keine Schnittmenge gefunden wird, wird ein NULL-Objekt zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getIntersectionOrNullObject(
                  anotherRange: Range | RangeAreas | string
              ): RangeAreas;
    parameters:
    - id: anotherRange
      description: Der Bereich, RangeAreas oder die Adresse, die verwendet wird, um die Schnittmenge zu bestimmen.
      type: "<xref uid=\"excel!Excel.Range:interface\" /> | <xref uid=\"excel!Excel.RangeAreas:interface\" /> | string\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getOffsetRangeAreas(rowOffset, columnOffset)
  uid: excel!Excel.RangeAreas#getOffsetRangeAreas:member(1)
  package: excel!
  fullName: getOffsetRangeAreas(rowOffset, columnOffset)
  summary: Gibt ein RangeAreas-Objekt zurück, das um den angegebenen Zeilen- und Spaltenoffset verschoben ist. Die Dimension des zurückgegebenen RangeAreas stimmt mit dem ursprünglichen Objekt überein. Wenn das sich ergebende RangeAreas außerhalb der Grenzen des Arbeitsblattrasters zu liegen kommt, wird ein Fehler ausgelöst.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getOffsetRangeAreas(
                  rowOffset: number,
                  columnOffset: number
              ): RangeAreas;
    parameters:
    - id: rowOffset
      description: Die Anzahl der Zeilen (positiv, negativ oder 0), mit denen die RangeAreas versetzt werden soll. Bei positiven Werten erfolgt der Versatz nach unten, bei negativen Werten nach oben.
      type: number
    - id: columnOffset
      description: Die Anzahl der Spalten (positiv, negativ oder 0), mit denen die RangeAreas versetzt werden soll. Bei positiven Werten erfolgt der Versatz nach rechts, bei negativen Werten nach links.
      type: number
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCells:member(1)
  package: excel!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: Gibt ein RangeAreas-Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen. Löst einen Fehler aus, wenn keine besonderen Zellen gefunden werden, die den Kriterien entsprechen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCells(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Der Typ der einzuschließenden Zellen.
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: Wenn CellType entweder Konstanten oder Formeln ist, wird dieses Argument verwendet, um zu bestimmen, welche Arten von Zellen in das Ergebnis einbezogen werden sollen. Diese Werte können miteinander kombiniert werden, um mehr als einen Typ zurückzugeben. Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSpecialCellsOrNullObject(cellType, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(1)
  package: excel!
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  summary: Gibt ein RangeAreas-Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen. Gibt ein NULL-Objekt zurück, wenn keine besonderen Zellen gefunden werden, die den Kriterien entsprechen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCellsOrNullObject(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Der Typ der einzuschließenden Zellen.
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: Wenn CellType entweder Konstanten oder Formeln ist, wird dieses Argument verwendet, um zu bestimmen, welche Arten von Zellen in das Ergebnis einbezogen werden sollen. Diese Werte können miteinander kombiniert werden, um mehr als einen Typ zurückzugeben. Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getTables(fullyContained)
  uid: excel!Excel.RangeAreas#getTables:member(1)
  package: excel!
  fullName: getTables(fullyContained)
  summary: Gibt eine bereichsbezogene Sammlung von Tabellen zurück, die sich mit einem beliebigen Bereich in diesem RangeAreas-Objekt überschneiden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): TableScopedCollection;'
    parameters:
    - id: fullyContained
      description: Wenn true, werden nur Tabellen zurückgegeben, die vollständig innerhalb der Bereichsgrenzen enthalten sind. Der Standardwert ist „false“.
      type: boolean
    return:
      type: <xref uid="excel!Excel.TableScopedCollection:interface" />
      description: ''
- name: getUsedRangeAreas(valuesOnly)
  uid: excel!Excel.RangeAreas#getUsedRangeAreas:member(1)
  package: excel!
  fullName: getUsedRangeAreas(valuesOnly)
  summary: Gibt das verwendete RangeAreas zurück, das alle verwendeten Bereiche einzelner rechteckiger Bereiche im RangeAreas-Objekt umfasst. Wenn in der RangeAreas keine Zellen verwendet werden, wird der ItemNotFound-Fehler ausgelöst.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreas(valuesOnly?: boolean): RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Gibt an, ob Zellen mit Werten als verwendete Zellen betrachtet werden sollen. Der Standardwert ist „false“.
      type: boolean
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getUsedRangeAreasOrNullObject(valuesOnly)
  uid: excel!Excel.RangeAreas#getUsedRangeAreasOrNullObject:member(1)
  package: excel!
  fullName: getUsedRangeAreasOrNullObject(valuesOnly)
  summary: Gibt das verwendete RangeAreas zurück, das alle verwendeten Bereiche einzelner rechteckiger Bereiche im RangeAreas-Objekt umfasst. Wenn in der RangeAreas keine Zellen verwendet werden, wird ein NULL-Objekt zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Gibt an, ob Zellen mit Werten als verwendete Zellen betrachtet werden sollen.
      type: boolean
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.RangeAreas#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
- name: setDirty()
  uid: excel!Excel.RangeAreas#setDirty:member(1)
  package: excel!
  fullName: setDirty()
  summary: Legt für das RangeAreas Neuberechnung bei der nächsten auszuführenden Neuberechnung fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 18e087e4dbecc5e6c6b1b61849e11737b62ed499
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49413230"
