### YamlMime:TSType
name: Excel.ChartSeries
uid: excel!Excel.ChartSeries:interface
package: excel!
fullName: Excel.ChartSeries
summary: Stellt eine Datenreihe in einem Diagramm dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: axisGroup
  uid: excel!Excel.ChartSeries#axisGroup:member
  package: excel!
  fullName: axisGroup
  summary: Gibt die Gruppe für die angegebene Datenreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'axisGroup: ChartAxisGroup | "Primary" | "Secondary";'
    return:
      type: <xref uid="excel!Excel.ChartAxisGroup:enum" /> | "Primary" | "Secondary"
- name: binOptions
  uid: excel!Excel.ChartSeries#binOptions:member
  package: excel!
  fullName: binOptions
  summary: Verkapselt die Intervalloptionen für Histogramme und Pareto-Diagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly binOptions: ChartBinOptions;'
    return:
      type: <xref uid="excel!Excel.ChartBinOptions:interface" />
- name: boxwhiskerOptions
  uid: excel!Excel.ChartSeries#boxwhiskerOptions:member
  package: excel!
  fullName: boxwhiskerOptions
  summary: Verkapselt die Optionen für Kastengrafikdiagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly boxwhiskerOptions: ChartBoxwhiskerOptions;'
    return:
      type: <xref uid="excel!Excel.ChartBoxwhiskerOptions:interface" />
- name: bubbleScale
  uid: excel!Excel.ChartSeries#bubbleScale:member
  package: excel!
  fullName: bubbleScale
  summary: Dies kann ein ganzzahliger Wert von 0 (null) bis 300 sein, der einem Prozentsatz der Standardgröße darstellt. Diese Eigenschaft gilt nur für Blasendiagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'bubbleScale: number;'
    return:
      type: number
- name: chartType
  uid: excel!Excel.ChartSeries#chartType:member
  package: excel!
  fullName: chartType
  summary: Stellt den Diagrammtyp einer Reihe dar. Weitere Informationen finden Sie unter Excel. ChartType.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      chartType:
                  | ChartType
                  | "Invalid"
                  | "ColumnClustered"
                  | "ColumnStacked"
                  | "ColumnStacked100"
                  | "3DColumnClustered"
                  | "3DColumnStacked"
                  | "3DColumnStacked100"
                  | "BarClustered"
                  | "BarStacked"
                  | "BarStacked100"
                  | "3DBarClustered"
                  | "3DBarStacked"
                  | "3DBarStacked100"
                  | "LineStacked"
                  | "LineStacked100"
                  | "LineMarkers"
                  | "LineMarkersStacked"
                  | "LineMarkersStacked100"
                  | "PieOfPie"
                  | "PieExploded"
                  | "3DPieExploded"
                  | "BarOfPie"
                  | "XyscatterSmooth"
                  | "XyscatterSmoothNoMarkers"
                  | "XyscatterLines"
                  | "XyscatterLinesNoMarkers"
                  | "AreaStacked"
                  | "AreaStacked100"
                  | "3DAreaStacked"
                  | "3DAreaStacked100"
                  | "DoughnutExploded"
                  | "RadarMarkers"
                  | "RadarFilled"
                  | "Surface"
                  | "SurfaceWireframe"
                  | "SurfaceTopView"
                  | "SurfaceTopViewWireframe"
                  | "Bubble"
                  | "Bubble3DEffect"
                  | "StockHLC"
                  | "StockOHLC"
                  | "StockVHLC"
                  | "StockVOHLC"
                  | "CylinderColClustered"
                  | "CylinderColStacked"
                  | "CylinderColStacked100"
                  | "CylinderBarClustered"
                  | "CylinderBarStacked"
                  | "CylinderBarStacked100"
                  | "CylinderCol"
                  | "ConeColClustered"
                  | "ConeColStacked"
                  | "ConeColStacked100"
                  | "ConeBarClustered"
                  | "ConeBarStacked"
                  | "ConeBarStacked100"
                  | "ConeCol"
                  | "PyramidColClustered"
                  | "PyramidColStacked"
                  | "PyramidColStacked100"
                  | "PyramidBarClustered"
                  | "PyramidBarStacked"
                  | "PyramidBarStacked100"
                  | "PyramidCol"
                  | "3DColumn"
                  | "Line"
                  | "3DLine"
                  | "3DPie"
                  | "Pie"
                  | "Xyscatter"
                  | "3DArea"
                  | "Area"
                  | "Doughnut"
                  | "Radar"
                  | "Histogram"
                  | "Boxwhisker"
                  | "Pareto"
                  | "RegionMap"
                  | "Treemap"
                  | "Waterfall"
                  | "Sunburst"
                  | "Funnel";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartType:enum" />
                    | "Invalid"
                    | "ColumnClustered"
                    | "ColumnStacked"
                    | "ColumnStacked100"
                    | "3DColumnClustered"
                    | "3DColumnStacked"
                    | "3DColumnStacked100"
                    | "BarClustered"
                    | "BarStacked"
                    | "BarStacked100"
                    | "3DBarClustered"
                    | "3DBarStacked"
                    | "3DBarStacked100"
                    | "LineStacked"
                    | "LineStacked100"
                    | "LineMarkers"
                    | "LineMarkersStacked"
                    | "LineMarkersStacked100"
                    | "PieOfPie"
                    | "PieExploded"
                    | "3DPieExploded"
                    | "BarOfPie"
                    | "XyscatterSmooth"
                    | "XyscatterSmoothNoMarkers"
                    | "XyscatterLines"
                    | "XyscatterLinesNoMarkers"
                    | "AreaStacked"
                    | "AreaStacked100"
                    | "3DAreaStacked"
                    | "3DAreaStacked100"
                    | "DoughnutExploded"
                    | "RadarMarkers"
                    | "RadarFilled"
                    | "Surface"
                    | "SurfaceWireframe"
                    | "SurfaceTopView"
                    | "SurfaceTopViewWireframe"
                    | "Bubble"
                    | "Bubble3DEffect"
                    | "StockHLC"
                    | "StockOHLC"
                    | "StockVHLC"
                    | "StockVOHLC"
                    | "CylinderColClustered"
                    | "CylinderColStacked"
                    | "CylinderColStacked100"
                    | "CylinderBarClustered"
                    | "CylinderBarStacked"
                    | "CylinderBarStacked100"
                    | "CylinderCol"
                    | "ConeColClustered"
                    | "ConeColStacked"
                    | "ConeColStacked100"
                    | "ConeBarClustered"
                    | "ConeBarStacked"
                    | "ConeBarStacked100"
                    | "ConeCol"
                    | "PyramidColClustered"
                    | "PyramidColStacked"
                    | "PyramidColStacked100"
                    | "PyramidBarClustered"
                    | "PyramidBarStacked"
                    | "PyramidBarStacked100"
                    | "PyramidCol"
                    | "3DColumn"
                    | "Line"
                    | "3DLine"
                    | "3DPie"
                    | "Pie"
                    | "Xyscatter"
                    | "3DArea"
                    | "Area"
                    | "Doughnut"
                    | "Radar"
                    | "Histogram"
                    | "Boxwhisker"
                    | "Pareto"
                    | "RegionMap"
                    | "Treemap"
                    | "Waterfall"
                    | "Sunburst"
                    | "Funnel"
- name: dataLabels
  uid: excel!Excel.ChartSeries#dataLabels:member
  package: excel!
  fullName: dataLabels
  summary: Eine Sammlung aller dataLabels-Objekte in der Datenreihe.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataLabels: ChartDataLabels;'
    return:
      type: <xref uid="excel!Excel.ChartDataLabels:interface" />
- name: doughnutHoleSize
  uid: excel!Excel.ChartSeries#doughnutHoleSize:member
  package: excel!
  fullName: doughnutHoleSize
  summary: Stellt die Innenringgröße einer Diagrammreihe dar. Gilt nur für Ring- und DoughnutExploded-Diagramme. Löst eine ungültige Argumentausnahme für ungültige Diagramme aus.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type: number
- name: explosion
  uid: excel!Excel.ChartSeries#explosion:member
  package: excel!
  fullName: explosion
  summary: Gibt den Explosions Wert für ein Kreisdiagramm oder ein Ringdiagramm Segment an. Gibt 0 (null) zurück, wenn keine Explosion vorliegt (die Spitze des Segments befindet sich in der Mitte des Kreisdiagramms).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'explosion: number;'
    return:
      type: number
- name: filtered
  uid: excel!Excel.ChartSeries#filtered:member
  package: excel!
  fullName: filtered
  summary: Gibt an, ob die Datenreihe gefiltert wird. Gilt nicht für Oberflächendiagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'filtered: boolean;'
    return:
      type: boolean
- name: firstSliceAngle
  uid: excel!Excel.ChartSeries#firstSliceAngle:member
  package: excel!
  fullName: firstSliceAngle
  summary: Gibt den Winkel des ersten Kreisdiagramms oder Ringdiagramm Segments in Grad (im Uhrzeigersinn von vertikal) an. Gilt nur für Kreis-, 3D-Kreis- und Ringdiagramme. Dies kann ein Wert von 0 bis 360 sein.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'firstSliceAngle: number;'
    return:
      type: number
- name: format
  uid: excel!Excel.ChartSeries#format:member
  package: excel!
  fullName: format
  summary: Stellt die Formatierung für eine Diagrammdatenreihe dar, einschließlich Füllung und Linienformatierung.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: ChartSeriesFormat;'
    return:
      type: <xref uid="excel!Excel.ChartSeriesFormat:interface" />
- name: gapWidth
  uid: excel!Excel.ChartSeries#gapWidth:member
  package: excel!
  fullName: gapWidth
  summary: Stellt die Abstandsbreite einer Diagrammreihe dar. Gilt nur für Balken-und Säulendiagramme, aber auch für bestimmte Klassen von Zeile-und Kreisdiagrammen. Löst eine ungültige Argumentausnahme für ungültige Diagramme aus.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gapWidth: number;'
    return:
      type: number
- name: gradientMaximumColor
  uid: excel!Excel.ChartSeries#gradientMaximumColor:member
  package: excel!
  fullName: gradientMaximumColor
  summary: Gibt die Farbe für den maximalen Wert einer Region Map-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMaximumColor: string;'
    return:
      type: string
- name: gradientMaximumType
  uid: excel!Excel.ChartSeries#gradientMaximumType:member
  package: excel!
  fullName: gradientMaximumType
  summary: Gibt den Typ für den maximalen Wert einer Region Map-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      gradientMaximumType:
                  | ChartGradientStyleType
                  | "ExtremeValue"
                  | "Number"
                  | "Percent";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartGradientStyleType:enum" />
                    | "ExtremeValue"
                    | "Number"
                    | "Percent"
- name: gradientMaximumValue
  uid: excel!Excel.ChartSeries#gradientMaximumValue:member
  package: excel!
  fullName: gradientMaximumValue
  summary: Gibt den Maximalwert einer Diagrammreihe für eine Regionskarte an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMaximumValue: number;'
    return:
      type: number
- name: gradientMidpointColor
  uid: excel!Excel.ChartSeries#gradientMidpointColor:member
  package: excel!
  fullName: gradientMidpointColor
  summary: Gibt die Farbe des Mittelpunkt Werts einer Regionskarten-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMidpointColor: string;'
    return:
      type: string
- name: gradientMidpointType
  uid: excel!Excel.ChartSeries#gradientMidpointType:member
  package: excel!
  fullName: gradientMidpointType
  summary: Gibt den Typ des Mittelpunkt Werts einer Regionskarten-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      gradientMidpointType:
                  | ChartGradientStyleType
                  | "ExtremeValue"
                  | "Number"
                  | "Percent";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartGradientStyleType:enum" />
                    | "ExtremeValue"
                    | "Number"
                    | "Percent"
- name: gradientMidpointValue
  uid: excel!Excel.ChartSeries#gradientMidpointValue:member
  package: excel!
  fullName: gradientMidpointValue
  summary: Gibt den Wert des Mittelpunkts einer Regionskarten-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMidpointValue: number;'
    return:
      type: number
- name: gradientMinimumColor
  uid: excel!Excel.ChartSeries#gradientMinimumColor:member
  package: excel!
  fullName: gradientMinimumColor
  summary: Gibt die Farbe für den Minimalwert einer Regionskarten-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMinimumColor: string;'
    return:
      type: string
- name: gradientMinimumType
  uid: excel!Excel.ChartSeries#gradientMinimumType:member
  package: excel!
  fullName: gradientMinimumType
  summary: Gibt den Typ für den Minimalwert einer Regions-Map-Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      gradientMinimumType:
                  | ChartGradientStyleType
                  | "ExtremeValue"
                  | "Number"
                  | "Percent";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartGradientStyleType:enum" />
                    | "ExtremeValue"
                    | "Number"
                    | "Percent"
- name: gradientMinimumValue
  uid: excel!Excel.ChartSeries#gradientMinimumValue:member
  package: excel!
  fullName: gradientMinimumValue
  summary: Gibt den Minimalwert einer Diagrammreihe für eine Regionskarte an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMinimumValue: number;'
    return:
      type: number
- name: gradientStyle
  uid: excel!Excel.ChartSeries#gradientStyle:member
  package: excel!
  fullName: gradientStyle
  summary: Gibt die Art des Datenreihen Verlaufs eines Bereichs Karten Diagramms an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientStyle: ChartGradientStyle | "TwoPhaseColor" | "ThreePhaseColor";'
    return:
      type: <xref uid="excel!Excel.ChartGradientStyle:enum" /> | "TwoPhaseColor" | "ThreePhaseColor"
- name: hasDataLabels
  uid: excel!Excel.ChartSeries#hasDataLabels:member
  package: excel!
  fullName: hasDataLabels
  summary: Gibt an, ob die Datenreihe Datenbeschriftungen enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type: boolean
- name: invertColor
  uid: excel!Excel.ChartSeries#invertColor:member
  package: excel!
  fullName: invertColor
  summary: Gibt die Füllungsfarbe für negative Datenpunkte in einer Datenreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'invertColor: string;'
    return:
      type: string
- name: invertIfNegative
  uid: excel!Excel.ChartSeries#invertIfNegative:member
  package: excel!
  fullName: invertIfNegative
  summary: True, wenn Excel das Muster im Element invertiert, wenn es eine negative Zahl entspricht.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'invertIfNegative: boolean;'
    return:
      type: boolean
- name: mapOptions
  uid: excel!Excel.ChartSeries#mapOptions:member
  package: excel!
  fullName: mapOptions
  summary: Verkapselt die Optionen für ein Bereichsdiagramm.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly mapOptions: ChartMapOptions;'
    return:
      type: <xref uid="excel!Excel.ChartMapOptions:interface" />
- name: markerBackgroundColor
  uid: excel!Excel.ChartSeries#markerBackgroundColor:member
  package: excel!
  fullName: markerBackgroundColor
  summary: Gibt die Hintergrundfarbe des Markers einer Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n}\n```"
- name: markerForegroundColor
  uid: excel!Excel.ChartSeries#markerForegroundColor:member
  package: excel!
  fullName: markerForegroundColor
  summary: Gibt die Vordergrundfarbe des Markers einer Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n}\n```"
- name: markerSize
  uid: excel!Excel.ChartSeries#markerSize:member
  package: excel!
  fullName: markerSize
  summary: Gibt die Markierungsgröße einer Diagrammreihe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerSize: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n}\n```"
- name: markerStyle
  uid: excel!Excel.ChartSeries#markerStyle:member
  package: excel!
  fullName: markerStyle
  summary: Gibt das Markierungs Format einer Diagrammreihe an. Weitere Informationen finden Sie unter Excel. ChartMarkerStyle.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      markerStyle:
                  | ChartMarkerStyle
                  | "Invalid"
                  | "Automatic"
                  | "None"
                  | "Square"
                  | "Diamond"
                  | "Triangle"
                  | "X"
                  | "Star"
                  | "Dot"
                  | "Dash"
                  | "Circle"
                  | "Plus"
                  | "Picture";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartMarkerStyle:enum" />
                    | "Invalid"
                    | "Automatic"
                    | "None"
                    | "Square"
                    | "Diamond"
                    | "Triangle"
                    | "X"
                    | "Star"
                    | "Dot"
                    | "Dash"
                    | "Circle"
                    | "Plus"
                    | "Picture"
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n}\n```"
- name: name
  uid: excel!Excel.ChartSeries#name:member
  package: excel!
  fullName: name
  summary: Gibt den Namen einer Datenreihe in einem Diagramm an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: overlap
  uid: excel!Excel.ChartSeries#overlap:member
  package: excel!
  fullName: overlap
  summary: Gibt an, wie Balken und Spalten angeordnet sind. Kann ein Wert zwischen-100 und 100 sein. Gilt nur für 2D-Balken- und 2D-Säulendiagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'overlap: number;'
    return:
      type: number
- name: parentLabelStrategy
  uid: excel!Excel.ChartSeries#parentLabelStrategy:member
  package: excel!
  fullName: parentLabelStrategy
  summary: Gibt den Bereich der übergeordneten Beschriftungs Reihe für ein TreeMap-Diagramm an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      parentLabelStrategy:
                  | ChartParentLabelStrategy
                  | "None"
                  | "Banner"
                  | "Overlapping";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartParentLabelStrategy:enum" />
                    | "None"
                    | "Banner"
                    | "Overlapping"
- name: plotOrder
  uid: excel!Excel.ChartSeries#plotOrder:member
  package: excel!
  fullName: plotOrder
  summary: Gibt die Zeichnungsreihenfolge einer Diagrammreihe in der Diagrammgruppe an.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'plotOrder: number;'
    return:
      type: number
- name: points
  uid: excel!Excel.ChartSeries#points:member
  package: excel!
  fullName: points
  summary: Gibt eine Auflistung aller Punkte in der Datenreihe zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly points: ChartPointsCollection;'
    return:
      type: <xref uid="excel!Excel.ChartPointsCollection:interface" />
- name: secondPlotSize
  uid: excel!Excel.ChartSeries#secondPlotSize:member
  package: excel!
  fullName: secondPlotSize
  summary: Gibt die Größe des sekundären Abschnitts eines Kreis-aus-Kreis-Diagramms oder eines Balken-aus-Kreis-Diagramms als Prozentsatz der Größe des primären Kreises an. Dies kann ein Wert von 5 bis 200 sein.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'secondPlotSize: number;'
    return:
      type: number
- name: showConnectorLines
  uid: excel!Excel.ChartSeries#showConnectorLines:member
  package: excel!
  fullName: showConnectorLines
  summary: Gibt an, ob Verbindungslinien in Wasserfall Diagrammen angezeigt werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showConnectorLines: boolean;'
    return:
      type: boolean
- name: showLeaderLines
  uid: excel!Excel.ChartSeries#showLeaderLines:member
  package: excel!
  fullName: showLeaderLines
  summary: Gibt an, ob für jede Datenbeschriftung in der Datenreihe Führungslinien angezeigt werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showLeaderLines: boolean;'
    return:
      type: boolean
- name: showShadow
  uid: excel!Excel.ChartSeries#showShadow:member
  package: excel!
  fullName: showShadow
  summary: Gibt an, ob die Datenreihe einen Schatten hat.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showShadow: boolean;'
    return:
      type: boolean
- name: smooth
  uid: excel!Excel.ChartSeries#smooth:member
  package: excel!
  fullName: smooth
  summary: Gibt an, ob die Datenreihe glatt ist. Gilt nur für einzeilige und Punktdiagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'smooth: boolean;'
    return:
      type: boolean
- name: splitType
  uid: excel!Excel.ChartSeries#splitType:member
  package: excel!
  fullName: splitType
  summary: Gibt an, wie die beiden Abschnitte eines Kreis-aus-Kreis-Diagramms oder eines Balken-aus-Kreis-Diagramms geteilt werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      splitType:
                  | ChartSplitType
                  | "SplitByPosition"
                  | "SplitByValue"
                  | "SplitByPercentValue"
                  | "SplitByCustomSplit";
    return:
      type: >-
        | <xref uid="excel!Excel.ChartSplitType:enum" />
                    | "SplitByPosition"
                    | "SplitByValue"
                    | "SplitByPercentValue"
                    | "SplitByCustomSplit"
- name: splitValue
  uid: excel!Excel.ChartSeries#splitValue:member
  package: excel!
  fullName: splitValue
  summary: Gibt den Schwellenwert an, der zwei Abschnitte eines Kreis-aus-Kreis-Diagramms oder eines Balken-aus-Kreis-Diagramms trennt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'splitValue: number;'
    return:
      type: number
- name: trendlines
  uid: excel!Excel.ChartSeries#trendlines:member
  package: excel!
  fullName: trendlines
  summary: Die Sammlung von Trendlinien in der Datenreihe.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly trendlines: ChartTrendlineCollection;'
    return:
      type: <xref uid="excel!Excel.ChartTrendlineCollection:interface" />
- name: varyByCategories
  uid: excel!Excel.ChartSeries#varyByCategories:member
  package: excel!
  fullName: varyByCategories
  summary: True, wenn Excel jeder Datenpunktmarkierung eine andere Farbe oder ein Muster zuweist. Das Diagramm darf nur eine Datenreihe enthalten.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'varyByCategories: boolean;'
    return:
      type: boolean
- name: xErrorBars
  uid: excel!Excel.ChartSeries#xErrorBars:member
  package: excel!
  fullName: xErrorBars
  summary: Stellt das Fehlerbalkenobjekt für eine Datenreihe dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly xErrorBars: ChartErrorBars;'
    return:
      type: <xref uid="excel!Excel.ChartErrorBars:interface" />
- name: yErrorBars
  uid: excel!Excel.ChartSeries#yErrorBars:member
  package: excel!
  fullName: yErrorBars
  summary: Stellt das Fehlerbalkenobjekt für eine Datenreihe dar.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly yErrorBars: ChartErrorBars;'
    return:
      type: <xref uid="excel!Excel.ChartErrorBars:interface" />
methods:
- name: delete()
  uid: excel!Excel.ChartSeries#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Löscht die Diagrammreihen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n  let sheet = context.workbook.worksheets.getItem(\"Sample\");\n  let seriesCollection = sheet.charts.getItemAt(0).series;\n  seriesCollection.load(\"count\");\n  await context.sync();\n\n  if (seriesCollection.count > 0) {\n    let series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n  }\n\n  await context.sync();\n}\n```"
- name: load(propertyNames)
  uid: excel!Excel.ChartSeries#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
- name: setBubbleSizes(sourceData)
  uid: excel!Excel.ChartSeries#setBubbleSizes:member(1)
  package: excel!
  fullName: setBubbleSizes(sourceData)
  summary: Legt die Blasengrößen für eine Diagrammreihe fest. Funktioniert nur für Blasendiagramme.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    parameters:
    - id: sourceData
      description: Das den Quelldaten entsprechende Range-Objekt.
      type: <xref uid="excel!Excel.Range:interface" />
    return:
      type: void
      description: ''
- name: setValues(sourceData)
  uid: excel!Excel.ChartSeries#setValues:member(1)
  package: excel!
  fullName: setValues(sourceData)
  summary: Legt die Werte für eine Diagrammreihe fest. Für Punktdiagramme sind dies die Y-Achsen-Werte.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setValues(sourceData: Range): void;'
    parameters:
    - id: sourceData
      description: Das den Quelldaten entsprechende Range-Objekt.
      type: <xref uid="excel!Excel.Range:interface" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n  let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n  let seriesCollection = sheet.charts.getItemAt(0);\n  let rangeSelection = sheet.getRange(\"C2:C7\");\n  let xRangeSelection = sheet.getRange(\"A1:A7\");\n\n  // Add a series.\n  let newSeries = seriesCollection.series.add(\"Qtr2\");\n  newSeries.setValues(rangeSelection);\n  newSeries.setXAxisValues(xRangeSelection);\n\n  await context.sync();\n}\n```"
- name: setXAxisValues(sourceData)
  uid: excel!Excel.ChartSeries#setXAxisValues:member(1)
  package: excel!
  fullName: setXAxisValues(sourceData)
  summary: Legt die Werte der X-Achse für eine Diagrammreihe fest. Funktioniert nur bei Punktdiagrammen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    parameters:
    - id: sourceData
      description: Das den Quelldaten entsprechende Range-Objekt.
      type: <xref uid="excel!Excel.Range:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: e8ebf838cae0b804c658bb24e282c6fe722e17df
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49417995"
