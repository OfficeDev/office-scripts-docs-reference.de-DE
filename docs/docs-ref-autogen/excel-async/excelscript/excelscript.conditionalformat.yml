### YamlMime:TSType
name: Excel.ConditionalFormat
uid: excel!Excel.ConditionalFormat:interface
package: excel!
fullName: Excel.ConditionalFormat
summary: Ein Objekt, das den Bereich, das Format, die Regel und andere Eigenschaften einer bedingten Formatierung kapselt. Weitere Informationen zum bedingten Formatierungsobjekt Modell finden Sie unter [Anwenden von bedingter Formatierung auf Excel-Bereiche](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting) .<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: cellValue
  uid: excel!Excel.ConditionalFormat#cellValue:member
  package: excel!
  fullName: cellValue
  summary: Gibt die bedingten Formateigenschaften des Zellenwerts zurück, wenn es sich bei dem aktuellen bedingten Format um einen cellvalue-Typ handelt. Beispielsweise zum Formatieren aller Zellen zwischen 5 und 10.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellValue: CellValueConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CellValueConditionalFormat:interface" />
- name: cellValueOrNullObject
  uid: excel!Excel.ConditionalFormat#cellValueOrNullObject:member
  package: excel!
  fullName: cellValueOrNullObject
  summary: Gibt die bedingten Formateigenschaften des Zellenwerts zurück, wenn es sich bei dem aktuellen bedingten Format um einen cellvalue-Typ handelt. Beispielsweise zum Formatieren aller Zellen zwischen 5 und 10.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellValueOrNullObject: CellValueConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CellValueConditionalFormat:interface" />
- name: colorScale
  uid: excel!Excel.ConditionalFormat#colorScale:member
  package: excel!
  fullName: colorScale
  summary: Gibt die ColorScale bedingten Formateigenschaften zurück, wenn das aktuelle bedingte Format ein ColorScale-Typ ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly colorScale: ColorScaleConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.ColorScaleConditionalFormat:interface" />
- name: colorScaleOrNullObject
  uid: excel!Excel.ConditionalFormat#colorScaleOrNullObject:member
  package: excel!
  fullName: colorScaleOrNullObject
  summary: Gibt die ColorScale bedingten Formateigenschaften zurück, wenn das aktuelle bedingte Format ein ColorScale-Typ ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly colorScaleOrNullObject: ColorScaleConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.ColorScaleConditionalFormat:interface" />
- name: custom
  uid: excel!Excel.ConditionalFormat#custom:member
  package: excel!
  fullName: custom
  summary: Gibt die benutzerdefinierten bedingten Formateigenschaften zurück, wenn das aktuelle bedingte Format ein benutzerdefinierter Typ ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly custom: CustomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CustomConditionalFormat:interface" />
- name: customOrNullObject
  uid: excel!Excel.ConditionalFormat#customOrNullObject:member
  package: excel!
  fullName: customOrNullObject
  summary: Gibt die benutzerdefinierten bedingten Formateigenschaften zurück, wenn das aktuelle bedingte Format ein benutzerdefinierter Typ ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly customOrNullObject: CustomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.CustomConditionalFormat:interface" />
- name: dataBar
  uid: excel!Excel.ConditionalFormat#dataBar:member
  package: excel!
  fullName: dataBar
  summary: Gibt die Eigenschaften des Datenbalkens zurück, wenn es sich bei dem aktuellen bedingten Format um einen Datenbalken handelt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataBar: DataBarConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.DataBarConditionalFormat:interface" />
- name: dataBarOrNullObject
  uid: excel!Excel.ConditionalFormat#dataBarOrNullObject:member
  package: excel!
  fullName: dataBarOrNullObject
  summary: Gibt die Eigenschaften des Datenbalkens zurück, wenn es sich bei dem aktuellen bedingten Format um einen Datenbalken handelt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataBarOrNullObject: DataBarConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.DataBarConditionalFormat:interface" />
- name: iconSet
  uid: excel!Excel.ConditionalFormat#iconSet:member
  package: excel!
  fullName: iconSet
  summary: Gibt die bedingten Formateigenschaften von Iconset zurück, wenn es sich bei dem aktuellen bedingten Format um einen Iconset-Typ handelt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly iconSet: IconSetConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.IconSetConditionalFormat:interface" />
- name: iconSetOrNullObject
  uid: excel!Excel.ConditionalFormat#iconSetOrNullObject:member
  package: excel!
  fullName: iconSetOrNullObject
  summary: Gibt die bedingten Formateigenschaften von Iconset zurück, wenn es sich bei dem aktuellen bedingten Format um einen Iconset-Typ handelt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly iconSetOrNullObject: IconSetConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.IconSetConditionalFormat:interface" />
- name: id
  uid: excel!Excel.ConditionalFormat#id:member
  package: excel!
  fullName: id
  summary: Die Priorität des bedingten Formats in der aktuellen ConditionalFormatCollection.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: preset
  uid: excel!Excel.ConditionalFormat#preset:member
  package: excel!
  fullName: preset
  summary: Gibt das bedingte Format der voreingestellten Kriterien zurück. Weitere Informationen finden Sie unter Excel. PresetCriteriaConditionalFormat.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly preset: PresetCriteriaConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.PresetCriteriaConditionalFormat:interface" />
- name: presetOrNullObject
  uid: excel!Excel.ConditionalFormat#presetOrNullObject:member
  package: excel!
  fullName: presetOrNullObject
  summary: Gibt das bedingte Format der voreingestellten Kriterien zurück. Weitere Informationen finden Sie unter Excel. PresetCriteriaConditionalFormat.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly presetOrNullObject: PresetCriteriaConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.PresetCriteriaConditionalFormat:interface" />
- name: priority
  uid: excel!Excel.ConditionalFormat#priority:member
  package: excel!
  fullName: priority
  summary: Die Priorität (oder der Index) innerhalb der bedingten Format Auflistung, in der sich dieses bedingte Format derzeit befindet. Wenn Sie dies ändern, werden auch die Prioritäten anderer bedingter Formate geändert, um eine zusammenhängende Prioritätsreihenfolge zuzulassen. Verwenden Sie eine negative Priorität, um von der Rückseite aus zu beginnen. Prioritäten, die größer als Grenzwertesind, werden abgerufen und auf die maximale (oder minimale, wenn negative) Priorität festgelegt. Beachten Sie auch, dass Sie beim Ändern der Priorität eine neue Kopie des Objekts an dieser neuen Prioritätsposition erneut abrufen müssen, wenn Sie weitere Änderungen daran vornehmen möchten.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'priority: number;'
    return:
      type: number
- name: stopIfTrue
  uid: excel!Excel.ConditionalFormat#stopIfTrue:member
  package: excel!
  fullName: stopIfTrue
  summary: Wenn die Bedingungen dieses bedingten Formats erfüllt sind, werden keine Formate niedrigerer Priorität für diese Zelle wirksam. NULL für databars, Symbolsätze und colorscales, da kein Konzept von StopIfTrue für diese vorhanden ist
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'stopIfTrue: boolean;'
    return:
      type: boolean
- name: textComparison
  uid: excel!Excel.ConditionalFormat#textComparison:member
  package: excel!
  fullName: textComparison
  summary: Gibt die spezifischen Text bedingten Formateigenschaften zurück, wenn es sich bei dem aktuellen bedingten Format um einen Texttyp handelt. Beispielsweise zum Formatieren von Zellen, die dem Wort "Text" entsprechen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly textComparison: TextConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TextConditionalFormat:interface" />
- name: textComparisonOrNullObject
  uid: excel!Excel.ConditionalFormat#textComparisonOrNullObject:member
  package: excel!
  fullName: textComparisonOrNullObject
  summary: Gibt die spezifischen Text bedingten Formateigenschaften zurück, wenn es sich bei dem aktuellen bedingten Format um einen Texttyp handelt. Beispielsweise zum Formatieren von Zellen, die dem Wort "Text" entsprechen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly textComparisonOrNullObject: TextConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TextConditionalFormat:interface" />
- name: topBottom
  uid: excel!Excel.ConditionalFormat#topBottom:member
  package: excel!
  fullName: topBottom
  summary: Gibt die oberen/unteren bedingten Formateigenschaften zurück, wenn es sich bei dem aktuellen bedingten Format um einen untersten Typ handelt. Zum Beispiel, um die oberen 10% oder die unteren 10 Elemente zu formatieren.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly topBottom: TopBottomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TopBottomConditionalFormat:interface" />
- name: topBottomOrNullObject
  uid: excel!Excel.ConditionalFormat#topBottomOrNullObject:member
  package: excel!
  fullName: topBottomOrNullObject
  summary: Gibt die oberen/unteren bedingten Formateigenschaften zurück, wenn es sich bei dem aktuellen bedingten Format um einen untersten Typ handelt. Zum Beispiel, um die oberen 10% oder die unteren 10 Elemente zu formatieren.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly topBottomOrNullObject: TopBottomConditionalFormat;'
    return:
      type: <xref uid="excel!Excel.TopBottomConditionalFormat:interface" />
- name: type
  uid: excel!Excel.ConditionalFormat#type:member
  package: excel!
  fullName: type
  summary: Ein Typ von bedingter Formatierung. Es kann jeweils nur eine festgelegt werden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      readonly type:
                  | ConditionalFormatType
                  | "Custom"
                  | "DataBar"
                  | "ColorScale"
                  | "IconSet"
                  | "TopBottom"
                  | "PresetCriteria"
                  | "ContainsText"
                  | "CellValue";
    return:
      type: >-
        | <xref uid="excel!Excel.ConditionalFormatType:enum" />
                    | "Custom"
                    | "DataBar"
                    | "ColorScale"
                    | "IconSet"
                    | "TopBottom"
                    | "PresetCriteria"
                    | "ContainsText"
                    | "CellValue"
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n}\n```"
methods:
- name: delete()
  uid: excel!Excel.ConditionalFormat#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Löscht dieses bedingte Format.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: getRange()
  uid: excel!Excel.ConditionalFormat#getRange:member(1)
  package: excel!
  fullName: getRange()
  summary: Gibt den Bereich zurück, auf den das bedingte Format angewendet wird. Löst einen Fehler aus, wenn das bedingte Format auf mehrere Bereiche angewendet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRangeOrNullObject()
  uid: excel!Excel.ConditionalFormat#getRangeOrNullObject:member(1)
  package: excel!
  fullName: getRangeOrNullObject()
  summary: Gibt den Bereich zurück, auf den das bedingte-Format angewendet wird, oder ein NULL-Objekt, wenn das bedingte Format auf mehrere Bereiche angewendet wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeOrNullObject(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRanges()
  uid: excel!Excel.ConditionalFormat#getRanges:member(1)
  package: excel!
  fullName: getRanges()
  summary: Gibt die RangeAreas zurück, die einen oder mehrere rechteckige Bereiche umfassen und auf die das bedingte Format angewendet werden soll.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRanges(): RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.ConditionalFormat#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: ae761a04a5be3d9bfde19d33db65f48f6aec08c0
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414607"
