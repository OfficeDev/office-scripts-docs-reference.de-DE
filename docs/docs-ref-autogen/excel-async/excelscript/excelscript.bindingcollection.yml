### YamlMime:TSType
name: Excel.BindingCollection
uid: excel!Excel.BindingCollection:interface
package: excel!
fullName: Excel.BindingCollection
summary: Eine Sammlung aller Binding-Objekte, die Teil der Arbeitsmappe sind.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: count
  uid: excel!Excel.BindingCollection#count:member
  package: excel!
  fullName: count
  summary: Gibt die Anzahl der Bindungen in der Sammlung zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly count: number;'
    return:
      type: number
methods:
- name: add(range, bindingType, id)
  uid: excel!Excel.BindingCollection#add:member(1)
  package: excel!
  fullName: add(range, bindingType, id)
  summary: Fügt eine neue Bindung an einen bestimmten Bereich hinzu.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      add(
                  range: Range | string,
                  bindingType: BindingType | "Range" | "Table" | "Text",
                  id: string
              ): Binding;
    parameters:
    - id: range
      description: Bereich für die Bindung. Kann ein Excel-Range-Objekt oder eine Zeichenfolge sein. Eine Zeichenfolge muss die vollständige Adresse einschließlich des Blattnamens enthalten.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    - id: bindingType
      description: Typ der Bindung. Siehe Excel. BindingType.
      type: <xref uid="excel!Excel.BindingType:enum" /> | "Range" | "Table" | "Text"
    - id: id
      description: Name der Bindung.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:interface" />
      description: ''
- name: addFromNamedItem(name, bindingType, id)
  uid: excel!Excel.BindingCollection#addFromNamedItem:member(1)
  package: excel!
  fullName: addFromNamedItem(name, bindingType, id)
  summary: Fügt eine neue Bindung auf Grundlage eines benannten Elements in der Arbeitsmappe hinzu. Wenn das benannte Element auf mehrere Bereiche verweist, wird der Fehler "InvalidReference" zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      addFromNamedItem(
                  name: string,
                  bindingType: BindingType | "Range" | "Table" | "Text",
                  id: string
              ): Binding;
    parameters:
    - id: name
      description: Name, aus dem die Bindung erstellt wird.
      type: string
    - id: bindingType
      description: Typ der Bindung. Siehe Excel. BindingType.
      type: <xref uid="excel!Excel.BindingType:enum" /> | "Range" | "Table" | "Text"
    - id: id
      description: Name der Bindung.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:interface" />
      description: ''
- name: addFromSelection(bindingType, id)
  uid: excel!Excel.BindingCollection#addFromSelection:member(1)
  package: excel!
  fullName: addFromSelection(bindingType, id)
  summary: Fügt eine neue Bindung basierend auf der aktuellen Auswahl hinzu. Wenn die Auswahl mehrere Bereiche aufweist, wird der Fehler "InvalidReference" zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      addFromSelection(
                  bindingType: BindingType | "Range" | "Table" | "Text",
                  id: string
              ): Binding;
    parameters:
    - id: bindingType
      description: Typ der Bindung. Siehe Excel. BindingType.
      type: <xref uid="excel!Excel.BindingType:enum" /> | "Range" | "Table" | "Text"
    - id: id
      description: Name der Bindung.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:interface" />
      description: ''
- name: getCount()
  uid: excel!Excel.BindingCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Ruft die Anzahl der Bindungen in der Sammlung ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(id)
  uid: excel!Excel.BindingCollection#getItem:member(1)
  package: excel!
  fullName: getItem(id)
  summary: Ruft ein binding-Objekt anhand seiner ID ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(id: string): Binding;'
    parameters:
    - id: id
      description: ID des abzurufenden Binding-Objekts.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:interface" />
      description: ''
- name: getItemAt(index)
  uid: excel!Excel.BindingCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: Ruft ein Binding-Objekt anhand seiner Position im Elementarray ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Binding;'
    parameters:
    - id: index
      description: Index-Wert des abzurufenden Objekts. Nullindiziert.
      type: number
    return:
      type: <xref uid="excel!Excel.Binding:interface" />
      description: ''
- name: getItemOrNullObject(id)
  uid: excel!Excel.BindingCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(id)
  summary: Ruft ein Binding-Objekt anhand seiner ID ab. Wenn das Binding-Objekt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): Binding;'
    parameters:
    - id: id
      description: ID des abzurufenden Binding-Objekts.
      type: string
    return:
      type: <xref uid="excel!Excel.Binding:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.BindingCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: e382728262de58b6bd1ce0baa4adedabb57db147
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49414461"
