### YamlMime:TSType
name: Excel.SlicerCollection
uid: excel!Excel.SlicerCollection:interface
package: excel!
fullName: Excel.SlicerCollection
summary: Stellt eine Auflistung aller Slicer-Objekte in der Arbeitsmappe oder einem Arbeitsblatt dar.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: add(slicerSource, sourceField, slicerDestination)
  uid: excel!Excel.SlicerCollection#add:member(1)
  package: excel!
  fullName: add(slicerSource, sourceField, slicerDestination)
  summary: Fügt der Arbeitsmappe einen neuen Datenschnitt hinzu.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      add(
                  slicerSource: string | PivotTable | Table,
                  sourceField: string | PivotField | number | TableColumn,
                  slicerDestination?: string | Worksheet
              ): Slicer;
    parameters:
    - id: slicerSource
      description: Die Datenquelle, auf der der neue datenschnitt basieren soll. Dabei kann es sich um ein PivotTable-Objekt, ein Table-Objekt oder eine Zeichenfolge handeln. Wenn ein PivotTable-Objekt übergeben wird, ist die Datenquelle die Quelle des PivotTable-Objekts. Wenn ein Table-Objekt übergeben wird, ist die Datenquelle das Table-Objekt. Wenn eine Zeichenfolge übergeben wird, wird Sie als Name/ID einer PivotTable/Tabelle interpretiert.
      type: string | <xref uid="excel!Excel.PivotTable:interface" /> | <xref uid="excel!Excel.Table:interface" />
    - id: sourceField
      description: Das Feld in der Datenquelle, nach dem gefiltert werden soll. Dabei kann es sich um ein PivotField-Objekt, ein Table Column-Objekt, die ID eines PivotField-Objekts oder die ID/Name-Spalte handeln.
      type: string | <xref uid="excel!Excel.PivotField:interface" /> | number | <xref uid="excel!Excel.TableColumn:interface" />
    - id: slicerDestination
      description: Optional. Das Arbeitsblatt, in dem der neue datenschnitt erstellt wird. Dabei kann es sich um ein Worksheet-Objekt oder den Namen/die ID eines Arbeitsblatts handeln. Dieser Parameter kann ausgelassen werden, wenn die Slicer-Auflistung aus dem Arbeitsblatt abgerufen wird.
      type: string | <xref uid="excel!Excel.Worksheet:interface" />
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Pivot\");\n    let slicer = sheet.slicers.add(\n        \"Farm Sales\", /* The slicer data source. For PivotTables, this can be the PivotTable object reference or name. */\n        \"Type\" /* The field in the data source to filter by. For PivotTables, this can be a PivotField object reference or ID. */\n    );\n    slicer.name = \"Fruit Slicer\";\n    await context.sync();\n}\n```"
- name: getCount()
  uid: excel!Excel.SlicerCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Gibt die Anzahl der Datenschnitte in der Sammlung zurück.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: excel!Excel.SlicerCollection#getItem:member(1)
  package: excel!
  fullName: getItem(key)
  summary: Ruft ein Datenschnittobjekt anhand seines Namens oder seiner ID ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Slicer;'
    parameters:
    - id: key
      description: Der Name oder die ID des datenschnitts.
      type: string
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: getItemAt(index)
  uid: excel!Excel.SlicerCollection#getItemAt:member(1)
  package: excel!
  fullName: getItemAt(index)
  summary: Ruft einen Datenschnitt anhand seiner Position in der Auflistung ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): Slicer;'
    parameters:
    - id: index
      description: Index-Wert des abzurufenden Objekts. Nullindiziert.
      type: number
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: getItemOrNullObject(key)
  uid: excel!Excel.SlicerCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(key)
  summary: Ruft einen Datenschnitt anhand seines Namens oder seiner ID ab. Wenn der Datenschnitt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: string): Slicer;'
    parameters:
    - id: key
      description: Der Name oder die ID des datenschnitts, der abgerufen werden soll.
      type: string
    return:
      type: <xref uid="excel!Excel.Slicer:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.SlicerCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 16f0f2674a5c30a3563a7c7ea618d2917d4525f5
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49412881"
