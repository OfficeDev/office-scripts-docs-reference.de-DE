### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableCollection:interface'
    summary: 'Stellt eine Auflistung aller Tabellen dar, die Teil der Arbeitsmappe oder des Arbeitsblatts in Abhängigkeit davon dar, wie diese abgerufen wurde.'
    name: Excel.TableCollection
    fullName: Excel.TableCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.TableCollection#add:member(1)'
      - 'excel!Excel.TableCollection#count:member'
      - 'excel!Excel.TableCollection#getCount:member(1)'
      - 'excel!Excel.TableCollection#getItem:member(1)'
      - 'excel!Excel.TableCollection#getItemAt:member(1)'
      - 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.TableCollection#load:member(1)'
  - uid: 'excel!Excel.TableCollection#add:member(1)'
    summary: 'Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.'
    name: 'add(address, hasHeaders)'
    fullName: 'add(address, hasHeaders)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(address: Range | string, hasHeaders: boolean): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: address
          description: 'Ein Range-Objekt oder eine Zeichenfolgenadresse oder der Name des Bereichs, der die Datenquelle darstellt. Wenn die Adresse keinen Arbeitsblattnamen enthält, wird das aktuell aktive Blatt verwendet.'
          type:
            - 'excel!Excel.TableCollection#add~0:complex'
        - id: hasHeaders
          description: 'Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.'
          type:
            - boolean
  - uid: 'excel!Excel.TableCollection#count:member'
    summary: Gibt die Anzahl der Tabellen in der Arbeitsmappe zurück.
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableCollection#getCount:member(1)'
    summary: Ruft die Anzahl von Tabellen in der Auflistung ab.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): number;'
      return:
        type:
          - number
        description: ''
  - uid: 'excel!Excel.TableCollection#getItem:member(1)'
    summary: Ruft eine Tabelle anhand des Namens oder der ID ab.
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: key
          description: Name oder ID der abzurufenden Tabelle.
          type:
            - string
  - uid: 'excel!Excel.TableCollection#getItemAt:member(1)'
    summary: Ruft eine Tabelle anhand ihrer Position in der Auflistung ab.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: index
          description: Index-Wert des abzurufenden Objekts. Nullindiziert.
          type:
            - number
  - uid: 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
    summary: 'Ruft eine Tabelle anhand des Namens oder der ID ab. Wenn die Tabelle nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.'
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: key
          description: Name oder ID der abzurufenden Tabelle.
          type:
            - string
  - uid: 'excel!Excel.TableCollection#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen `context.sync()` vor dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Table:interface'
    name: Table
    fullName: Excel.Table
  - uid: 'excel!Excel.TableCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'